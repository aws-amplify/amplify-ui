import { defaultOptions, exportsCode } from '../plugins/snack-options';

// https://github.com/expo/snack/blob/main/docs/url-query-parameters.md#Files
interface File {
  type?: 'CODE' | 'ASSET';
  contents?: string;
  url?: string;
}

// https://github.com/expo/snack/blob/main/docs/url-query-parameters.md#parameters
interface SnackOptions {
  name?: string;
  description?: string;
  code?: string;
  platform?: 'web' | 'android' | 'ios';
  supportedPlatforms?: string;
  theme?: 'light' | 'dark';
  preview?: boolean;
  loading?: string;
  dependencies?: string[];
  files?: Record<string, File>;
  sdkVersion?: string;
}

// const defaultOptions: SnackOptions = {
//   name: "example",
//   platform: "web",
//   supportedPlatforms: "ios,android,web",
//   preview: true,
//   loading: "lazy",
//   dependencies: [
//     "@aws-amplify/ui-react-native,aws-amplify",
//     "react-native-safe-area-context",
//     "amazon-cognito-identity-js",
//     "@react-native-community/netinfo",
//     "@react-native-async-storage/async-storage",
//     "react-native-get-random-values",
//     "react-native-url-polyfill",
//   ]
// }

// const exportsCode = `// NOTE: this file needs to be generated by the Amplify CLI

// export default {}`

export const ExpoSnack = (options: SnackOptions) => {
  const {
    code,
    files,
    dependencies,
    name,
    description,
    preview,
    platform,
    supportedPlatforms,
  } = {
    ...defaultOptions,
    ...options,
  };

  const props = {
    'data-snack-dependencies': dependencies.join(','),
    'data-snack-name': name,
    'data-snack-description': description,
    'data-snack-preview': `${preview}`,
    'data-snack-platform': platform,
    'data-snack-supported-platforms': supportedPlatforms,
    ...(files && {
      'data-snack-files': encodeURIComponent(JSON.stringify(files)),
    }),
    ...(code && { 'data-snack-code': encodeURIComponent(code) }),
  };

  return <div className="snack-player" {...props} />;
};

export const ExpoSnackWithExports = (options: SnackOptions) => {
  const { code, ...rest } = options;
  return (
    <ExpoSnack
      files={{
        'App.tsx': {
          type: 'CODE',
          contents: code,
        },
        'aws-exports.js': {
          type: 'CODE',
          contents: exportsCode,
        },
      }}
      {...rest}
    />
  );
};
