// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button applies theme and style props 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderColor": "hsl(210, 10%, 58%)",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "gap": 12,
        "justifyContent": "center",
        "paddingHorizontal": 16,
        "paddingVertical": 12,
      },
      undefined,
      {
        "backgroundColor": "blue",
      },
    ]
  }
>
  <Text
    style={
      [
        {
          "color": "hsl(210, 50%, 10%)",
          "fontSize": 16,
          "fontWeight": "700",
          "textAlign": "center",
        },
        {
          "color": "red",
        },
      ]
    }
  >
    A pressable button
  </Text>
</View>
`;

exports[`Button renders as expected with a component passed as children 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderColor": "hsl(210, 10%, 58%)",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "gap": 12,
        "justifyContent": "center",
        "paddingHorizontal": 16,
        "paddingVertical": 12,
      },
      undefined,
      undefined,
    ]
  }
>
  <Text>
    A pressable button
  </Text>
</View>
`;

exports[`Button renders as expected with a string passed as children 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "alignItems": "center",
        "backgroundColor": "transparent",
        "borderColor": "hsl(210, 10%, 58%)",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "gap": 12,
        "justifyContent": "center",
        "paddingHorizontal": 16,
        "paddingVertical": 12,
      },
      undefined,
      undefined,
    ]
  }
>
  <Text
    style={
      [
        {
          "color": "hsl(210, 50%, 10%)",
          "fontSize": 16,
          "fontWeight": "700",
          "textAlign": "center",
        },
        undefined,
      ]
    }
  >
    A pressable button
  </Text>
</View>
`;
