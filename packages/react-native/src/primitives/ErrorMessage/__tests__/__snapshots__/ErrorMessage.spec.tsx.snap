// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ErrorMessage renders as expected with accessibilityRole 1`] = `
<View
  accessibilityRole="none"
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "#f5bcbc",
        "flexDirection": "row",
        "height": 50,
        "justifyContent": "space-between",
        "width": "75%",
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "height": "100%",
        "justifyContent": "center",
      }
    }
  >
    <Image
      source={
        Object {
          "testUri": "../../../src/assets/icons/error.png",
        }
      }
      style={
        Array [
          Object {
            "height": 20,
            "resizeMode": "contain",
            "tintColor": undefined,
            "width": 20,
          },
          undefined,
        ]
      }
    />
  </View>
  <View
    style={
      Object {
        "alignItems": "flex-start",
        "flex": 4,
        "height": "100%",
        "justifyContent": "center",
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "fontSize": 14,
          },
          undefined,
        ]
      }
    />
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "height": "100%",
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      testID="dismissButton"
    >
      <Image
        source={
          Object {
            "testUri": "../../../src/assets/icons/close.png",
          }
        }
        style={
          Array [
            Object {
              "height": 20,
              "resizeMode": "contain",
              "tintColor": undefined,
              "width": 20,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`ErrorMessage renders default ErrorMessage as expected 1`] = `
<View
  accessibilityRole="alert"
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "#f5bcbc",
        "flexDirection": "row",
        "height": 50,
        "justifyContent": "space-between",
        "width": "75%",
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "height": "100%",
        "justifyContent": "center",
      }
    }
  >
    <Image
      source={
        Object {
          "testUri": "../../../src/assets/icons/error.png",
        }
      }
      style={
        Array [
          Object {
            "height": 20,
            "resizeMode": "contain",
            "tintColor": undefined,
            "width": 20,
          },
          undefined,
        ]
      }
    />
  </View>
  <View
    style={
      Object {
        "alignItems": "flex-start",
        "flex": 4,
        "height": "100%",
        "justifyContent": "center",
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "fontSize": 14,
          },
          undefined,
        ]
      }
    >
      Default ErrorMessage
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "height": "100%",
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      testID="dismissButton"
    >
      <Image
        source={
          Object {
            "testUri": "../../../src/assets/icons/close.png",
          }
        }
        style={
          Array [
            Object {
              "height": 20,
              "resizeMode": "contain",
              "tintColor": undefined,
              "width": 20,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</View>
`;
