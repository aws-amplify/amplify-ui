// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PasswordField renders as expected 1`] = `
<View
  accessibilityLabel="Label"
  accessibilityState={
    Object {
      "disabled": undefined,
    }
  }
  accessible={true}
  style={
    Array [
      Object {
        "alignItems": "flex-start",
      },
      undefined,
    ]
  }
>
  <Text
    accessibilityRole="text"
    style={
      Array [
        Object {
          "fontSize": 16,
          "fontWeight": "400",
          "marginHorizontal": 4,
          "marginVertical": 2,
        },
        Object {
          "color": "hsl(210, 50%, 10%)",
        },
        undefined,
      ]
    }
  >
    Label
  </Text>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderColor": "black",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "padding": 8,
        "width": "100%",
      }
    }
  >
    <TextInput
      accessible={true}
      autoCapitalize="none"
      editable={true}
      secureTextEntry={true}
      style={
        Array [
          Object {
            "flexGrow": 1,
            "fontSize": 16,
          },
          undefined,
        ]
      }
      testID="passwordInput"
    />
    <View
      accessibilityRole="button"
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          null,
          null,
        ]
      }
    >
      <Image
        accessibilityRole="image"
        source={
          Object {
            "testUri": "../../../src/assets/icons/visibilityOff.png",
          }
        }
        style={
          Array [
            Object {
              "height": 16,
              "resizeMode": "contain",
              "tintColor": undefined,
              "width": 16,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`PasswordField renders as expected when disabled 1`] = `
<View
  accessibilityLabel="Label"
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  style={
    Array [
      Object {
        "alignItems": "flex-start",
        "opacity": 0.6,
      },
      undefined,
    ]
  }
>
  <Text
    accessibilityRole="text"
    style={
      Array [
        Object {
          "fontSize": 16,
          "fontWeight": "400",
          "marginHorizontal": 4,
          "marginVertical": 2,
        },
        Object {
          "color": "hsl(210, 50%, 10%)",
        },
        undefined,
      ]
    }
  >
    Label
  </Text>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderColor": "black",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "padding": 8,
        "width": "100%",
      }
    }
  >
    <TextInput
      accessible={true}
      autoCapitalize="none"
      editable={false}
      secureTextEntry={true}
      style={
        Array [
          Object {
            "flexGrow": 1,
            "fontSize": 16,
          },
          undefined,
        ]
      }
      testID="passwordInput"
    />
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          null,
          null,
        ]
      }
    >
      <Image
        accessibilityRole="image"
        source={
          Object {
            "testUri": "../../../src/assets/icons/visibilityOff.png",
          }
        }
        style={
          Array [
            Object {
              "height": 16,
              "resizeMode": "contain",
              "tintColor": undefined,
              "width": 16,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`PasswordField should be able to hide show password icon 1`] = `
<View
  accessibilityLabel="Label"
  accessibilityState={
    Object {
      "disabled": undefined,
    }
  }
  accessible={true}
  style={
    Array [
      Object {
        "alignItems": "flex-start",
      },
      undefined,
    ]
  }
>
  <Text
    accessibilityRole="text"
    style={
      Array [
        Object {
          "fontSize": 16,
          "fontWeight": "400",
          "marginHorizontal": 4,
          "marginVertical": 2,
        },
        Object {
          "color": "hsl(210, 50%, 10%)",
        },
        undefined,
      ]
    }
  >
    Label
  </Text>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderColor": "black",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "padding": 8,
        "width": "100%",
      }
    }
  >
    <TextInput
      accessible={true}
      autoCapitalize="none"
      editable={true}
      secureTextEntry={true}
      style={
        Array [
          Object {
            "flexGrow": 1,
            "fontSize": 16,
          },
          undefined,
        ]
      }
      testID="passwordInput"
    />
  </View>
</View>
`;

exports[`PasswordField should be able to obscure text programmatically 1`] = `
<View
  accessibilityLabel="Label"
  accessibilityState={
    Object {
      "disabled": undefined,
    }
  }
  accessible={true}
  style={
    Array [
      Object {
        "alignItems": "flex-start",
      },
      undefined,
    ]
  }
>
  <Text
    accessibilityRole="text"
    style={
      Array [
        Object {
          "fontSize": 16,
          "fontWeight": "400",
          "marginHorizontal": 4,
          "marginVertical": 2,
        },
        Object {
          "color": "hsl(210, 50%, 10%)",
        },
        undefined,
      ]
    }
  >
    Label
  </Text>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderColor": "black",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "padding": 8,
        "width": "100%",
      }
    }
  >
    <TextInput
      accessible={true}
      autoCapitalize="none"
      editable={true}
      secureTextEntry={false}
      style={
        Array [
          Object {
            "flexGrow": 1,
            "fontSize": 16,
          },
          undefined,
        ]
      }
      testID="passwordInput"
    />
    <View
      accessibilityRole="button"
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          null,
          null,
        ]
      }
    >
      <Image
        accessibilityRole="image"
        source={
          Object {
            "testUri": "../../../src/assets/icons/visibilityOn.png",
          }
        }
        style={
          Array [
            Object {
              "height": 16,
              "resizeMode": "contain",
              "tintColor": undefined,
              "width": 16,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</View>
`;
