// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PasswordField renders as expected 1`] = `
<View
  accessibilityLabel="Label"
  accessibilityState={
    Object {
      "disabled": undefined,
    }
  }
  accessible={true}
  style={
    Array [
      Object {
        "alignItems": "flex-start",
      },
      undefined,
    ]
  }
>
  <Text
    accessibilityRole="text"
    style={
      Array [
        Object {
          "fontSize": 16,
          "marginHorizontal": 4,
          "marginVertical": 2,
        },
        undefined,
      ]
    }
  >
    Label
  </Text>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderColor": "black",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "padding": 8,
        "width": "100%",
      }
    }
  >
    <TextInput
      accessible={true}
      editable={true}
      secureTextEntry={true}
      style={
        Array [
          Object {
            "flexGrow": 1,
            "fontSize": 16,
            "padding": 0,
          },
          undefined,
        ]
      }
      testID="passwordInput"
    />
    <View>
      <View
        accessibilityRole="button"
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <Image
          accessibilityRole="image"
          source={
            Object {
              "testUri": "../../../src/assets/icons/visibilityOff.png",
            }
          }
          style={
            Array [
              Object {
                "height": 16,
                "resizeMode": "contain",
                "tintColor": undefined,
                "width": 16,
              },
              undefined,
            ]
          }
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`PasswordField renders as expected when disabled 1`] = `
<View
  accessibilityLabel="Label"
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  style={
    Array [
      Object {
        "alignItems": "flex-start",
        "opacity": 0.6,
      },
      undefined,
    ]
  }
>
  <Text
    accessibilityRole="text"
    style={
      Array [
        Object {
          "fontSize": 16,
          "marginHorizontal": 4,
          "marginVertical": 2,
        },
        undefined,
      ]
    }
  >
    Label
  </Text>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderColor": "black",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "padding": 8,
        "width": "100%",
      }
    }
  >
    <TextInput
      accessible={true}
      editable={false}
      secureTextEntry={true}
      style={
        Array [
          Object {
            "flexGrow": 1,
            "fontSize": 16,
            "padding": 0,
          },
          undefined,
        ]
      }
      testID="passwordInput"
    />
    <View>
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <Image
          accessibilityRole="image"
          source={
            Object {
              "testUri": "../../../src/assets/icons/visibilityOff.png",
            }
          }
          style={
            Array [
              Object {
                "height": 16,
                "resizeMode": "contain",
                "tintColor": undefined,
                "width": 16,
              },
              undefined,
            ]
          }
        />
      </View>
    </View>
  </View>
</View>
`;
