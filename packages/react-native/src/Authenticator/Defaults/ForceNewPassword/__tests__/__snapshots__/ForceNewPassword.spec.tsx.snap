// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ForceNewPassword renders an error message 1`] = `
[
  <Text
    accessibilityRole="header"
    style={
      [
        {
          "color": "hsl(210, 50%, 10%)",
        },
        {
          "fontSize": 24,
          "fontWeight": "500",
          "lineHeight": 36,
        },
        {
          "marginVertical": 12,
          "paddingHorizontal": 12,
        },
      ]
    }
  >
    Change Password
  </Text>,
  <View
    style={
      {
        "paddingBottom": 8,
      }
    }
  >
    <View
      style={
        [
          {
            "alignItems": "flex-start",
            "marginBottom": 8,
          },
          [
            {},
            {
              "paddingHorizontal": 12,
            },
          ],
        ]
      }
      testID="amplify__text-field-container"
    >
      <View
        accessible={true}
        style={
          {
            "alignItems": "center",
            "borderColor": "hsl(210, 10%, 58%)",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "paddingHorizontal": 8,
          }
        }
        testID="amplify__text-field__input-container"
      >
        <TextInput
          accessibilityState={
            {
              "disabled": false,
            }
          }
          accessible={true}
          autoCapitalize="none"
          editable={true}
          onBlur={[Function]}
          onChangeText={[Function]}
          placeholderTextColor="hsl(210, 10%, 40%)"
          secureTextEntry={true}
          style={
            [
              {
                "color": "hsl(210, 50%, 10%)",
                "flexGrow": 1,
                "fontSize": 16,
                "paddingHorizontal": 4,
                "paddingVertical": 12,
              },
              {},
            ]
          }
        />
        <View
          accessibilityLabel="Show password"
          accessibilityRole="button"
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {},
              undefined,
              undefined,
            ]
          }
        >
          <Image
            accessibilityRole="image"
            accessible={true}
            source={
              {
                "uri": "visibilityOff",
              }
            }
            style={
              [
                {
                  "height": 16,
                  "resizeMode": "contain",
                  "tintColor": undefined,
                  "width": 16,
                },
                [
                  {
                    "tintColor": "hsl(210, 10%, 40%)",
                  },
                  undefined,
                ],
              ]
            }
          />
        </View>
      </View>
    </View>
    <TextInput
      accessibilityElementsHidden={true}
      pointerEvents="none"
      style={
        {
          "backgroundColor": "transparent",
          "height": 0.1,
          "width": 0.1,
        }
      }
    />
  </View>,
  <View
    accessibilityRole="alert"
    accessible={true}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "hsl(0, 75%, 95%)",
          "flexDirection": "row",
          "paddingHorizontal": 8,
          "paddingVertical": 12,
        },
        {
          "marginHorizontal": 12,
        },
      ]
    }
    testID="amplify__error-message"
  >
    <Image
      accessibilityRole="image"
      accessible={true}
      source={
        {
          "uri": "error",
        }
      }
      style={
        [
          {
            "height": 20,
            "resizeMode": "contain",
            "tintColor": undefined,
            "width": 20,
          },
          [
            {
              "margin": 8,
              "tintColor": "hsl(0, 100%, 20%)",
            },
            {},
          ],
        ]
      }
    />
    <Text
      style={
        [
          {
            "color": "hsl(0, 100%, 20%)",
            "flex": 1,
            "fontSize": 16,
            "paddingHorizontal": 8,
          },
          {},
        ]
      }
    >
      Test error message
    </Text>
  </View>,
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "hsl(190, 95%, 30%)",
          "borderRadius": 4,
          "flexDirection": "row",
          "gap": 12,
          "justifyContent": "center",
          "paddingHorizontal": 16,
          "paddingVertical": 12,
        },
        undefined,
        {
          "margin": 12,
        },
      ]
    }
    testID="amplify__button"
  >
    <Text
      style={
        [
          {
            "color": "hsl(0, 0%, 100%)",
            "fontSize": 16,
            "fontWeight": "700",
            "textAlign": "center",
          },
          {},
        ]
      }
    >
      Change Password
    </Text>
  </View>,
  <View
    style={
      {
        "flexDirection": "row",
        "flexWrap": "wrap",
        "justifyContent": "center",
      }
    }
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderRadius": 4,
            "flexDirection": "row",
            "gap": 12,
            "justifyContent": "center",
            "paddingHorizontal": 16,
            "paddingVertical": 12,
          },
          undefined,
          {
            "marginVertical": 8,
            "minWidth": "50%",
          },
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "hsl(190, 95%, 30%)",
              "fontSize": 16,
              "fontWeight": "700",
              "textAlign": "center",
            },
            undefined,
          ]
        }
      >
        Back to Sign In
      </Text>
    </View>
  </View>,
]
`;

exports[`ForceNewPassword renders as expected 1`] = `
[
  <Text
    accessibilityRole="header"
    style={
      [
        {
          "color": "hsl(210, 50%, 10%)",
        },
        {
          "fontSize": 24,
          "fontWeight": "500",
          "lineHeight": 36,
        },
        {
          "marginVertical": 12,
          "paddingHorizontal": 12,
        },
      ]
    }
  >
    Change Password
  </Text>,
  <View
    style={
      {
        "paddingBottom": 8,
      }
    }
  >
    <View
      style={
        [
          {
            "alignItems": "flex-start",
            "marginBottom": 8,
          },
          [
            {},
            {
              "paddingHorizontal": 12,
            },
          ],
        ]
      }
      testID="amplify__text-field-container"
    >
      <View
        accessible={true}
        style={
          {
            "alignItems": "center",
            "borderColor": "hsl(210, 10%, 58%)",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "paddingHorizontal": 8,
          }
        }
        testID="amplify__text-field__input-container"
      >
        <TextInput
          accessibilityState={
            {
              "disabled": false,
            }
          }
          accessible={true}
          autoCapitalize="none"
          editable={true}
          onBlur={[Function]}
          onChangeText={[Function]}
          placeholderTextColor="hsl(210, 10%, 40%)"
          secureTextEntry={true}
          style={
            [
              {
                "color": "hsl(210, 50%, 10%)",
                "flexGrow": 1,
                "fontSize": 16,
                "paddingHorizontal": 4,
                "paddingVertical": 12,
              },
              {},
            ]
          }
        />
        <View
          accessibilityLabel="Show password"
          accessibilityRole="button"
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {},
              undefined,
              undefined,
            ]
          }
        >
          <Image
            accessibilityRole="image"
            accessible={true}
            source={
              {
                "uri": "visibilityOff",
              }
            }
            style={
              [
                {
                  "height": 16,
                  "resizeMode": "contain",
                  "tintColor": undefined,
                  "width": 16,
                },
                [
                  {
                    "tintColor": "hsl(210, 10%, 40%)",
                  },
                  undefined,
                ],
              ]
            }
          />
        </View>
      </View>
    </View>
    <TextInput
      accessibilityElementsHidden={true}
      pointerEvents="none"
      style={
        {
          "backgroundColor": "transparent",
          "height": 0.1,
          "width": 0.1,
        }
      }
    />
  </View>,
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "hsl(190, 95%, 30%)",
          "borderRadius": 4,
          "flexDirection": "row",
          "gap": 12,
          "justifyContent": "center",
          "paddingHorizontal": 16,
          "paddingVertical": 12,
        },
        undefined,
        {
          "margin": 12,
        },
      ]
    }
    testID="amplify__button"
  >
    <Text
      style={
        [
          {
            "color": "hsl(0, 0%, 100%)",
            "fontSize": 16,
            "fontWeight": "700",
            "textAlign": "center",
          },
          {},
        ]
      }
    >
      Change Password
    </Text>
  </View>,
  <View
    style={
      {
        "flexDirection": "row",
        "flexWrap": "wrap",
        "justifyContent": "center",
      }
    }
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderRadius": 4,
            "flexDirection": "row",
            "gap": 12,
            "justifyContent": "center",
            "paddingHorizontal": 16,
            "paddingVertical": 12,
          },
          undefined,
          {
            "marginVertical": 8,
            "minWidth": "50%",
          },
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "hsl(190, 95%, 30%)",
              "fontSize": 16,
              "fontWeight": "700",
              "textAlign": "center",
            },
            undefined,
          ]
        }
      >
        Back to Sign In
      </Text>
    </View>
  </View>,
]
`;

exports[`ForceNewPassword renders as expected with validationErrors 1`] = `
[
  <Text
    accessibilityRole="header"
    style={
      [
        {
          "color": "hsl(210, 50%, 10%)",
        },
        {
          "fontSize": 24,
          "fontWeight": "500",
          "lineHeight": 36,
        },
        {
          "marginVertical": 12,
          "paddingHorizontal": 12,
        },
      ]
    }
  >
    Change Password
  </Text>,
  <View
    style={
      {
        "paddingBottom": 8,
      }
    }
  >
    <View
      style={
        [
          {
            "alignItems": "flex-start",
            "marginBottom": 8,
          },
          [
            {},
            {
              "paddingHorizontal": 12,
            },
          ],
        ]
      }
      testID="amplify__text-field-container"
    >
      <View
        accessible={true}
        style={
          {
            "alignItems": "center",
            "borderColor": "hsl(0, 95%, 30%)",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "opacity": 0.6,
            "paddingHorizontal": 8,
          }
        }
        testID="amplify__text-field__input-container"
      >
        <TextInput
          accessibilityState={
            {
              "disabled": true,
            }
          }
          accessible={true}
          autoCapitalize="none"
          editable={false}
          onBlur={[Function]}
          onChangeText={[Function]}
          placeholderTextColor="hsl(210, 10%, 40%)"
          secureTextEntry={true}
          style={
            [
              {
                "color": "hsl(210, 50%, 10%)",
                "flexGrow": 1,
                "fontSize": 16,
                "paddingHorizontal": 4,
                "paddingVertical": 12,
              },
              {},
            ]
          }
        />
        <View
          accessibilityLabel="Show password"
          accessibilityRole="button"
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": true,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "opacity": 0.6,
              },
              undefined,
              undefined,
            ]
          }
        >
          <Image
            accessibilityRole="image"
            accessible={true}
            source={
              {
                "uri": "visibilityOff",
              }
            }
            style={
              [
                {
                  "height": 16,
                  "resizeMode": "contain",
                  "tintColor": undefined,
                  "width": 16,
                },
                [
                  {
                    "tintColor": "hsl(210, 10%, 40%)",
                  },
                  undefined,
                ],
              ]
            }
          />
        </View>
      </View>
    </View>
    <TextInput
      accessibilityElementsHidden={true}
      pointerEvents="none"
      style={
        {
          "backgroundColor": "transparent",
          "height": 0.1,
          "width": 0.1,
        }
      }
    />
    <View
      style={
        {
          "paddingHorizontal": 16,
          "paddingVertical": 8,
        }
      }
    >
      <Text
        style={
          {
            "color": "hsl(0, 100%, 20%)",
            "paddingVertical": 1,
          }
        }
      >
        error
      </Text>
      <Text
        style={
          {
            "color": "hsl(0, 100%, 20%)",
            "paddingVertical": 1,
          }
        }
      >
        another error
      </Text>
    </View>
  </View>,
  <View
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "hsl(190, 95%, 30%)",
          "borderRadius": 4,
          "flexDirection": "row",
          "gap": 12,
          "justifyContent": "center",
          "paddingHorizontal": 16,
          "paddingVertical": 12,
        },
        undefined,
        {
          "margin": 12,
        },
      ]
    }
    testID="amplify__button"
  >
    <Text
      style={
        [
          {
            "color": "hsl(0, 0%, 100%)",
            "fontSize": 16,
            "fontWeight": "700",
            "textAlign": "center",
          },
          {},
        ]
      }
    >
      Changing
    </Text>
  </View>,
  <View
    style={
      {
        "flexDirection": "row",
        "flexWrap": "wrap",
        "justifyContent": "center",
      }
    }
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderRadius": 4,
            "flexDirection": "row",
            "gap": 12,
            "justifyContent": "center",
            "paddingHorizontal": 16,
            "paddingVertical": 12,
          },
          undefined,
          {
            "marginVertical": 8,
            "minWidth": "50%",
          },
        ]
      }
    >
      <Text
        style={
          [
            {
              "color": "hsl(190, 95%, 30%)",
              "fontSize": 16,
              "fontWeight": "700",
              "textAlign": "center",
            },
            undefined,
          ]
        }
      >
        Back to Sign In
      </Text>
    </View>
  </View>,
]
`;
