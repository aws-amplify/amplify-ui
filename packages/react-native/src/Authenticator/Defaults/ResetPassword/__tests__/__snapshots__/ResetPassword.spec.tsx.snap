// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ResetPassword renders an error message 1`] = `
Array [
  <Text
    accessibilityRole="header"
    style={
      Array [
        Object {
          "color": "black",
        },
        Object {
          "fontSize": 34,
          "fontWeight": "300",
          "lineHeight": 51,
        },
        undefined,
      ]
    }
  >
    Reset Password
  </Text>,
  <View>
    <View
      accessibilityLabel="Username"
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      style={
        Array [
          Object {
            "alignItems": "flex-start",
          },
          Object {
            "fontSize": 16,
            "marginVertical": 4,
          },
        ]
      }
    >
      <Text
        accessibilityRole="text"
        style={
          Array [
            Object {
              "fontSize": 16,
              "fontWeight": "400",
              "marginHorizontal": 4,
              "marginVertical": 2,
            },
            Object {
              "color": "hsl(210, 50%, 10%)",
            },
            undefined,
          ]
        }
      >
        Username
      </Text>
      <View
        style={
          Object {
            "alignItems": "center",
            "borderColor": "black",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "padding": 8,
            "width": "100%",
          }
        }
      >
        <TextInput
          accessible={true}
          autoCapitalize="none"
          editable={true}
          onBlur={[Function]}
          onChangeText={[Function]}
          placeholder="Username"
          style={
            Array [
              Object {
                "flexGrow": 1,
                "fontSize": 16,
              },
              undefined,
            ]
          }
        />
      </View>
    </View>
  </View>,
  <View
    accessibilityRole="alert"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#f5bcbc",
          "flexDirection": "row",
          "paddingHorizontal": 4,
          "paddingVertical": 16,
          "width": "100%",
        },
        undefined,
      ]
    }
  >
    <Image
      accessibilityRole="image"
      source={
        Object {
          "testUri": "../../../src/assets/icons/error.png",
        }
      }
      style={
        Array [
          Object {
            "height": 20,
            "resizeMode": "contain",
            "tintColor": undefined,
            "width": 20,
          },
          Object {
            "margin": 4,
          },
        ]
      }
    />
    <Text
      style={
        Array [
          Object {
            "flex": 1,
            "paddingHorizontal": 4,
          },
          undefined,
        ]
      }
    >
      Test error message
    </Text>
  </View>,
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        null,
        Object {
          "backgroundColor": "teal",
          "marginVertical": 8,
          "paddingVertical": 12,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "alignSelf": "center",
          },
          Object {
            "color": "white",
            "fontSize": 16,
            "fontWeight": "bold",
          },
        ]
      }
    >
      Send code
    </Text>
  </View>,
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        null,
        Object {
          "marginVertical": 8,
          "paddingVertical": 12,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "alignSelf": "center",
          },
          Object {
            "color": "teal",
          },
        ]
      }
    >
      Back to Sign In
    </Text>
  </View>,
]
`;

exports[`ResetPassword renders as expected 1`] = `
Array [
  <Text
    accessibilityRole="header"
    style={
      Array [
        Object {
          "color": "black",
        },
        Object {
          "fontSize": 34,
          "fontWeight": "300",
          "lineHeight": 51,
        },
        undefined,
      ]
    }
  >
    Reset Password
  </Text>,
  <View>
    <View
      accessibilityLabel="Username"
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      style={
        Array [
          Object {
            "alignItems": "flex-start",
          },
          Object {
            "fontSize": 16,
            "marginVertical": 4,
          },
        ]
      }
    >
      <Text
        accessibilityRole="text"
        style={
          Array [
            Object {
              "fontSize": 16,
              "fontWeight": "400",
              "marginHorizontal": 4,
              "marginVertical": 2,
            },
            Object {
              "color": "hsl(210, 50%, 10%)",
            },
            undefined,
          ]
        }
      >
        Username
      </Text>
      <View
        style={
          Object {
            "alignItems": "center",
            "borderColor": "black",
            "borderRadius": 4,
            "borderWidth": 1,
            "flexDirection": "row",
            "padding": 8,
            "width": "100%",
          }
        }
      >
        <TextInput
          accessible={true}
          autoCapitalize="none"
          editable={true}
          onBlur={[Function]}
          onChangeText={[Function]}
          placeholder="Username"
          style={
            Array [
              Object {
                "flexGrow": 1,
                "fontSize": 16,
              },
              undefined,
            ]
          }
        />
      </View>
    </View>
  </View>,
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        null,
        Object {
          "backgroundColor": "teal",
          "marginVertical": 8,
          "paddingVertical": 12,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "alignSelf": "center",
          },
          Object {
            "color": "white",
            "fontSize": 16,
            "fontWeight": "bold",
          },
        ]
      }
    >
      Send code
    </Text>
  </View>,
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        null,
        Object {
          "marginVertical": 8,
          "paddingVertical": 12,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "alignSelf": "center",
          },
          Object {
            "color": "teal",
          },
        ]
      }
    >
      Back to Sign In
    </Text>
  </View>,
]
`;
