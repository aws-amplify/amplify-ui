// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConfirmSignUp renders as expected 1`] = `
Array [
  <Text
    accessibilityRole="header"
    style={
      Array [
        Object {
          "color": "hsl(210, 50%, 10%)",
        },
        Object {
          "fontSize": 24,
          "fontWeight": "300",
          "lineHeight": 36,
        },
        undefined,
      ]
    }
  >
    We Emailed You
  </Text>,
  <Text>
    Your code is on the way. To log in, enter the code we emailed to a***@e***.com. It may take a minute to arrive.
  </Text>,
  <View />,
  <View
    accessibilityRole="button"
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "hsl(190, 95%, 30%)",
          "padding": 12,
        },
        null,
        Object {
          "marginVertical": 8,
        },
        null,
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "alignSelf": "center",
            "color": "hsl(0, 0%, 100%)",
            "fontSize": 16,
            "fontWeight": "700",
          },
          undefined,
        ]
      }
    >
      Confirm
    </Text>
  </View>,
  <View>
    <View
      accessibilityRole="button"
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "hsl(0, 0%, 100%)",
            "padding": 12,
          },
          null,
          Object {
            "marginVertical": 8,
          },
          null,
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "alignSelf": "center",
              "color": "hsl(190, 95%, 30%)",
            },
            undefined,
          ]
        }
      >
        Resend Code
      </Text>
    </View>
  </View>,
]
`;

exports[`ConfirmSignUp renders as expected when isPending is true 1`] = `
Array [
  <Text
    accessibilityRole="header"
    style={
      Array [
        Object {
          "color": "hsl(210, 50%, 10%)",
        },
        Object {
          "fontSize": 24,
          "fontWeight": "300",
          "lineHeight": 36,
        },
        undefined,
      ]
    }
  >
    We Emailed You
  </Text>,
  <Text>
    Your code is on the way. To log in, enter the code we emailed to a***@e***.com. It may take a minute to arrive.
  </Text>,
  <View />,
  <View
    accessibilityRole="button"
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "hsl(190, 95%, 30%)",
          "padding": 12,
        },
        null,
        Object {
          "marginVertical": 8,
        },
        null,
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "alignSelf": "center",
            "color": "hsl(0, 0%, 100%)",
            "fontSize": 16,
            "fontWeight": "700",
          },
          undefined,
        ]
      }
    >
      Confirming
    </Text>
  </View>,
  <View>
    <View
      accessibilityRole="button"
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "hsl(0, 0%, 100%)",
            "padding": 12,
          },
          null,
          Object {
            "marginVertical": 8,
          },
          null,
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "alignSelf": "center",
              "color": "hsl(190, 95%, 30%)",
            },
            undefined,
          ]
        }
      >
        Resend Code
      </Text>
    </View>
  </View>,
]
`;

exports[`ConfirmSignUp renders as expected with an error 1`] = `
Array [
  <Text
    accessibilityRole="header"
    style={
      Array [
        Object {
          "color": "hsl(210, 50%, 10%)",
        },
        Object {
          "fontSize": 24,
          "fontWeight": "300",
          "lineHeight": 36,
        },
        undefined,
      ]
    }
  >
    We Emailed You
  </Text>,
  <Text>
    Your code is on the way. To log in, enter the code we emailed to a***@e***.com. It may take a minute to arrive.
  </Text>,
  <View />,
  <View
    accessibilityRole="alert"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "hsl(0, 75%, 85%)",
          "flexDirection": "row",
          "paddingHorizontal": 4,
          "paddingVertical": 16,
          "width": "100%",
        },
        undefined,
      ]
    }
  >
    <Image
      accessibilityRole="image"
      source={
        Object {
          "testUri": "../../../src/assets/icons/error.png",
        }
      }
      style={
        Array [
          Object {
            "height": 20,
            "resizeMode": "contain",
            "tintColor": undefined,
            "width": 20,
          },
          Object {
            "margin": 4,
          },
        ]
      }
    />
    <Text
      style={
        Array [
          Object {
            "color": "hsl(0, 100%, 20%)",
            "flex": 1,
            "paddingHorizontal": 4,
          },
          undefined,
        ]
      }
    >
      An error!
    </Text>
  </View>,
  <View
    accessibilityRole="button"
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "hsl(190, 95%, 30%)",
          "padding": 12,
        },
        null,
        Object {
          "marginVertical": 8,
        },
        null,
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "alignSelf": "center",
            "color": "hsl(0, 0%, 100%)",
            "fontSize": 16,
            "fontWeight": "700",
          },
          undefined,
        ]
      }
    >
      Confirm
    </Text>
  </View>,
  <View>
    <View
      accessibilityRole="button"
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "hsl(0, 0%, 100%)",
            "padding": 12,
          },
          null,
          Object {
            "marginVertical": 8,
          },
          null,
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "alignSelf": "center",
              "color": "hsl(190, 95%, 30%)",
            },
            undefined,
          ]
        }
      >
        Resend Code
      </Text>
    </View>
  </View>,
]
`;
