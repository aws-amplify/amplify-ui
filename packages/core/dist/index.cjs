var X=Object.create;var C=Object.defineProperty,ee=Object.defineProperties,te=Object.getOwnPropertyDescriptor,re=Object.getOwnPropertyDescriptors,oe=Object.getOwnPropertyNames,I=Object.getOwnPropertySymbols,ne=Object.getPrototypeOf,P=Object.prototype.hasOwnProperty,M=Object.prototype.propertyIsEnumerable;var D=(t,e,r)=>e in t?C(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,f=(t,e)=>{for(var r in e||(e={}))P.call(e,r)&&D(t,r,e[r]);if(I)for(var r of I(e))M.call(e,r)&&D(t,r,e[r]);return t},A=(t,e)=>ee(t,re(e)),O=t=>C(t,"__esModule",{value:!0});var z=(t,e)=>{var r={};for(var o in t)P.call(t,o)&&e.indexOf(o)<0&&(r[o]=t[o]);if(t!=null&&I)for(var o of I(t))e.indexOf(o)<0&&M.call(t,o)&&(r[o]=t[o]);return r};var ae=(t,e)=>{O(t);for(var r in e)C(t,r,{get:e[r],enumerable:!0})},ie=(t,e,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of oe(e))!P.call(t,o)&&o!=="default"&&C(t,o,{get:()=>e[o],enumerable:!(r=te(e,o))||r.enumerable});return t},d=t=>ie(O(C(t!=null?X(ne(t)):{},"default",t&&t.__esModule&&"default"in t?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t);ae(exports,{AuthChallengeNames:()=>l,FederatedIdentityProviders:()=>T,authInputAttributes:()=>x,authMachine:()=>V,authService:()=>ce,dict:()=>le,getActorContext:()=>me,getActorState:()=>J,getAliasInfoFromContext:()=>de,getConfiguredAliases:()=>ue,socialProviderLoginMechanisms:()=>se,userNameAliasArray:()=>E});var c=d(require("xstate")),U=d(require("aws-amplify"));var a=d(require("xstate")),p=d(require("lodash"));var l;(function(n){n.SMS_MFA="SMS_MFA",n.SOFTWARE_TOKEN_MFA="SOFTWARE_TOKEN_MFA",n.NEW_PASSWORD_REQUIRED="NEW_PASSWORD_REQUIRED",n.RESET_REQUIRED="RESET_REQUIRED",n.MFA_SETUP="MFA_SETUP"})(l||(l={}));var E=["username","email","phone_number"],se=["amazon","google","facebook"];var g=d(require("aws-amplify")),G=(0,a.createMachine)({initial:"init",id:"signInActor",states:{init:{always:[{target:"signIn.submit",cond:"shouldAutoSignIn"},{target:"signIn"}]},signIn:{initial:"edit",exit:"clearFormValues",states:{edit:{entry:(0,a.sendUpdate)(),on:{SUBMIT:"submit",CHANGE:{actions:"handleInput"},FEDERATED_SIGN_IN:"federatedSignIn"}},federatedSignIn:{entry:[(0,a.sendUpdate)(),"clearError"],invoke:{src:"federatedSignIn",onError:{actions:"setRemoteError"}}},submit:{entry:["clearError",(0,a.sendUpdate)()],invoke:{src:"signIn",onDone:[{cond:"shouldSetupTOTP",actions:["setUser","setChallengeName"],target:"#signInActor.setupTOTP"},{cond:"shouldConfirmSignIn",actions:["setUser","setChallengeName"],target:"#signInActor.confirmSignIn"},{cond:"shouldForceChangePassword",actions:["setUser","setChallengeName"],target:"#signInActor.forceNewPassword"},{actions:"setUser",target:"verifying"}],onError:[{cond:"shouldRedirectToConfirmSignUp",actions:["setUsername","setConfirmSignUpIntent"],target:"rejected"},{cond:"shouldRedirectToConfirmResetPassword",actions:["setUsername","setConfirmResetPasswordIntent"],target:"rejected"},{actions:"setRemoteError",target:"edit"}]}},verifying:{entry:["clearError",(0,a.sendUpdate)()],invoke:{src:"checkVerifiedContact",onDone:[{cond:"shouldRequestVerification",target:"#signInActor.verifyUser",actions:"setUnverifiedAttributes"},{target:"resolved"}],onError:{actions:"setRemoteError",target:"edit"}}},resolved:{always:"#signInActor.resolved"},rejected:{always:"#signInActor.rejected"}}},confirmSignIn:{initial:"edit",exit:["clearFormValues","clearError"],states:{edit:{entry:(0,a.sendUpdate)(),on:{SUBMIT:"submit",SIGN_IN:"#signInActor.signIn",CHANGE:{actions:"handleInput"}}},submit:{entry:["clearError",(0,a.sendUpdate)()],invoke:{src:"confirmSignIn",onDone:{target:"#signInActor.resolved",actions:["setUser","clearChallengeName"]},onError:{target:"edit",actions:"setRemoteError"}}}}},forceNewPassword:{initial:"edit",exit:["clearFormValues","clearError"],states:{edit:{entry:(0,a.sendUpdate)(),on:{SUBMIT:"submit",SIGN_IN:"#signInActor.signIn",CHANGE:{actions:"handleInput"}}},submit:{entry:"clearError",invoke:{src:"forceNewPassword",onDone:{actions:["setUser","clearChallengeName"],target:"#signInActor.resolved"},onError:{actions:"setRemoteError",target:"edit"}}}}},setupTOTP:{initial:"edit",exit:["clearFormValues","clearError"],states:{edit:{entry:(0,a.sendUpdate)(),on:{SUBMIT:"submit",SIGN_IN:"#signInActor.signIn",CHANGE:{actions:"handleInput"}}},submit:{entry:[(0,a.sendUpdate)(),"clearError"],invoke:{src:"verifyTotpToken",onDone:{actions:["setUser","clearChallengeName"],target:"#signInActor.resolved"},onError:{actions:"setRemoteError",target:"edit"}}}}},verifyUser:{initial:"edit",exit:["clearFormValues","clearError"],states:{edit:{entry:(0,a.sendUpdate)(),on:{SUBMIT:"submit",SKIP:"#signInActor.resolved",CHANGE:{actions:"handleInput"}}},submit:{entry:"clearError",invoke:{src:"verifyUser",onDone:{target:"#signInActor.confirmVerifyUser"},onError:{actions:"setRemoteError",target:"edit"}}}}},confirmVerifyUser:{initial:"edit",exit:["clearFormValues","clearError","clearUnverifiedAttributes","clearAttributeToVerify"],states:{edit:{entry:(0,a.sendUpdate)(),on:{SUBMIT:"submit",SKIP:"#signInActor.resolved",CHANGE:{actions:"handleInput"}}},submit:{entry:"clearError",invoke:{src:"confirmVerifyUser",onDone:{target:"#signInActor.resolved"},onError:{actions:"setRemoteError",target:"edit"}}}}},resolved:{type:"final",data:t=>({user:t.user})},rejected:{type:"final",data:(t,e)=>({intent:t.redirectIntent,authAttributes:t.authAttributes})}}},{actions:{handleInput:(0,a.assign)({formValues(t,e){let{name:r,value:o}=e.data;return A(f({},t.formValues),{[r]:o})}}),setUser:(0,a.assign)({user:(t,e)=>e.data.user||e.data}),setUsername:(0,a.assign)({authAttributes:t=>({username:t.formValues.username})}),setRemoteError:(0,a.assign)({remoteError:(t,e)=>{var r;return((r=e.data)==null?void 0:r.message)||e.data}}),setChallengeName:(0,a.assign)({challengeName:(t,e)=>{var r;return(r=e.data)==null?void 0:r.challengeName}}),setConfirmSignUpIntent:(0,a.assign)({redirectIntent:"confirmSignUp"}),setConfirmResetPasswordIntent:(0,a.assign)({redirectIntent:"confirmPasswordReset"}),setUnverifiedAttributes:(0,a.assign)({unverifiedAttributes:(t,e)=>e.data.unverified}),clearChallengeName:(0,a.assign)({challengeName:void 0}),clearError:(0,a.assign)({remoteError:""}),clearFormValues:(0,a.assign)({formValues:{}}),clearUnverifiedAttributes:(0,a.assign)({unverifiedAttributes:void 0}),clearAttributeToVerify:(0,a.assign)({attributeToVerify:void 0})},guards:{shouldConfirmSignIn:(t,e)=>{let r=(0,p.get)(e,"data.challengeName");return[l.SMS_MFA,l.SOFTWARE_TOKEN_MFA].includes(r)},shouldRedirectToConfirmSignUp:(t,e)=>e.data.code==="UserNotConfirmedException",shouldRedirectToConfirmResetPassword:(t,e)=>e.data.code==="PasswordResetRequiredException",shouldSetupTOTP:(t,e)=>(0,p.get)(e,"data.challengeName")===l.MFA_SETUP,shouldForceChangePassword:(t,e)=>(0,p.get)(e,"data.challengeName")===l.NEW_PASSWORD_REQUIRED,shouldAutoSignIn:t=>!!(t.intent&&t.intent==="autoSignIn"),shouldRequestVerification:(t,e)=>{let{unverified:r,verified:o}=e.data;return(0,p.isEmpty)(o)&&!(0,p.isEmpty)(r)}},services:{async signIn(t){let e=t.intent&&t.intent==="autoSignIn"?t.authAttributes:t.formValues,{username:r,password:o}=e;return g.Auth.signIn(r,o)},async confirmSignIn(t,e){let{challengeName:r,user:o}=t,{confirmation_code:i}=e.data,n;return(r===l.SMS_MFA||r===l.SOFTWARE_TOKEN_MFA)&&(n=r),g.Auth.confirmSignIn(o,i,n)},async forceNewPassword(t,e){let{user:r}=t,o=(0,p.get)(e,"data.password");return g.Auth.completeNewPassword(r,o)},async verifyTotpToken(t,e){let{user:r}=t,{confirmation_code:o}=e.data;return g.Auth.verifyTotpToken(r,o)},async federatedSignIn(t,e){let{provider:r}=e.data;return await g.Auth.federatedSignIn({provider:r})},async checkVerifiedContact(t,e){let{user:r}=t;return await g.Auth.verifiedContact(r)},async verifyUser(t,e){let r=await g.Auth.verifyCurrentUserAttribute(e.data.unverifiedAttr);return t.attributeToVerify=e.data.unverifiedAttr,r},async confirmVerifyUser(t,e){let{attributeToVerify:r}=t,{confirmation_code:o}=e.data;return await g.Auth.verifyCurrentUserAttributeSubmit(r,o)}}});var s=d(require("xstate"));var B=d(require("lodash/isEmpty")),H=d(require("lodash/merge")),W=t=>{let{password:e,confirm_password:r}=t;if(!e&&!r)return null;if(!e||!r||e!==r)return{confirm_password:"Your passwords must match"}};var j=async(t,e)=>{let r=await Promise.all(e.map(i=>i(t))),o=(0,H.default)({},...r);return(0,B.default)(o)?Promise.resolve():Promise.reject(o)};var y=d(require("aws-amplify")),L=(0,s.createMachine)({id:"signUpActor",initial:"init",states:{init:{always:[{target:"confirmSignUp",cond:"shouldInitConfirmSignUp"},{target:"signUp"}]},signUp:{type:"parallel",exit:["clearError","clearFormValues"],states:{validation:{initial:"pending",states:{pending:{invoke:{src:"validateFields",onDone:{target:"valid",actions:"clearValidationError"},onError:{target:"invalid",actions:"setFieldErrors"}}},valid:{entry:(0,s.sendUpdate)()},invalid:{entry:(0,s.sendUpdate)()}},on:{CHANGE:{actions:"handleInput",target:".pending"}}},submission:{initial:"idle",states:{idle:{entry:(0,s.sendUpdate)(),on:{SUBMIT:"validate",FEDERATED_SIGN_IN:"federatedSignIn"}},federatedSignIn:{entry:[(0,s.sendUpdate)(),"clearError"],invoke:{src:"federatedSignIn",onDone:"#signUpActor.resolved",onError:{actions:"setRemoteError"}}},validate:{entry:(0,s.sendUpdate)(),invoke:{src:"validateFields",onDone:{target:"pending",actions:"clearValidationError"},onError:{target:"idle",actions:"setFieldErrors"}}},pending:{entry:[(0,s.sendUpdate)(),"clearError"],invoke:{src:"signUp",onDone:{target:"resolved",actions:["setUser","setCredentials"]},onError:{target:"idle",actions:"setRemoteError"}}},resolved:{type:"final",always:"#signUpActor.confirmSignUp"}}}}},confirmSignUp:{initial:"edit",states:{edit:{entry:(0,s.sendUpdate)(),on:{SUBMIT:"submit",CHANGE:{actions:"handleInput"},RESEND:"resend"}},resend:{entry:(0,s.sendUpdate)(),invoke:{src:"resendConfirmationCode",onDone:{target:"edit"},onError:{target:"edit",actions:"setRemoteError"}}},submit:{entry:[(0,s.sendUpdate)(),"clearError"],invoke:{src:"confirmSignUp",onDone:{target:"#signUpActor.resolved"},onError:{target:"edit",actions:"setRemoteError"}}}}},resolved:{type:"final",data:t=>{let{username:e,password:r}=t.authAttributes,o=!!(e&&r);return{user:t.user,intent:o?"autoSignIn":null,authAttributes:{username:e,password:r}}}}}},{guards:{shouldInitConfirmSignUp:t=>t.intent&&t.intent==="confirmSignUp"},actions:{setUser:(0,s.assign)({user:(t,e)=>{var r;return(r=e.data.user)!=null?r:e.data}}),setRemoteError:(0,s.assign)({remoteError:(t,e)=>{var r;return((r=e.data)==null?void 0:r.message)||e.data}}),setFieldErrors:(0,s.assign)({validationError:(t,e)=>e.data}),setCredentials:(0,s.assign)({authAttributes:t=>{var i,n;let[e]=(i=t.login_mechanisms)!=null?i:["username"],r=t.formValues[e],o=(n=t.formValues)==null?void 0:n.password;return{username:r,password:o}}}),handleInput:(0,s.assign)({formValues:(t,e)=>{let{name:r,value:o}=e.data;return A(f({},t.formValues),{[r]:o})}}),clearError:(0,s.assign)({remoteError:""}),clearFormValues:(0,s.assign)({formValues:{}}),clearValidationError:(0,s.assign)({validationError:{}})},services:{async confirmSignUp(t,e){let{username:r,confirmation_code:o}=e.data;return y.Auth.confirmSignUp(r,o)},async resendConfirmationCode(t,e){let{username:r}=e.data;return y.Auth.resendSignUp(r)},async federatedSignIn(t,e){let{provider:r}=e.data;return await y.Auth.federatedSignIn({provider:r})},async signUp(t,e){let b=t,{formValues:v}=b,h=v,{password:r}=h,o=z(h,["password"]),{login_mechanisms:i}=b,[n]=i!=null?i:["username"];o.phone_number&&(o.phone_number=o.phone_number.replace(/[^A-Z0-9+]/gi,""));let m=o[n];return delete o[n],delete o.confirm_password,await y.Auth.signUp({username:m,password:r,attributes:o})},async validateFields(t,e){let{formValues:r}=t;return j(r,[W])}}});var q=d(require("xstate")),K=d(require("aws-amplify")),Q=(0,q.createMachine)({initial:"pending",id:"signOutActor",states:{pending:{invoke:{src:"signOut",onDone:"resolved",onError:"rejected"}},resolved:{type:"final"},rejected:{type:"final"}}},{services:{signOut:()=>K.Auth.signOut()}});var u=d(require("xstate")),N=d(require("aws-amplify")),Z=(0,u.createMachine)({id:"resetPasswordActor",initial:"init",states:{init:{always:[{target:"confirmResetPassword",cond:"shouldAutoConfirmReset"},{target:"resetPassword"}]},resetPassword:{initial:"edit",exit:["clearFormValues","clearError"],states:{edit:{entry:(0,u.sendUpdate)(),on:{SUBMIT:"submit",CHANGE:{actions:"handleInput"}}},submit:{entry:[(0,u.sendUpdate)(),"setUsername","clearError"],invoke:{src:"resetPassword",onDone:{target:"#resetPasswordActor.confirmResetPassword"},onError:{actions:["setRemoteError"],target:"edit"}}}}},confirmResetPassword:{initial:"edit",exit:["clearFormValues","clearError","clearUsername"],states:{edit:{entry:(0,u.sendUpdate)(),on:{SUBMIT:"submit",RESEND:"resendCode",CHANGE:{actions:"handleInput"}}},resendCode:{entry:["clearError",(0,u.sendUpdate)()],invoke:{src:"resetPassword",onDone:{target:"edit"},onError:{actions:"setRemoteError",target:"edit"}}},submit:{entry:["clearError",(0,u.sendUpdate)()],invoke:{src:"confirmResetPassword",onDone:{actions:"clearUsername",target:"#resetPasswordActor.resolved"},onError:{actions:"setRemoteError",target:"edit"}}}}},resolved:{type:"final"}}},{actions:{setRemoteError:(0,u.assign)({remoteError:(t,e)=>{var r;return((r=e.data)==null?void 0:r.message)||e.data}}),setUsername:(0,u.assign)({username:t=>t.formValues.username}),handleInput:(0,u.assign)({formValues:(t,e)=>{let{name:r,value:o}=e.data;return A(f({},t.formValues),{[r]:o})}}),clearFormValues:(0,u.assign)({formValues:{}}),clearError:(0,u.assign)({remoteError:""}),clearUsername:(0,u.assign)({username:void 0})},guards:{shouldAutoConfirmReset:(t,e)=>!!(t.intent&&t.intent==="confirmPasswordReset")},services:{async resetPassword(t){var r,o;let e=(o=(r=t.formValues)==null?void 0:r.username)!=null?o:t.username;return N.Auth.forgotPassword(e)},async confirmResetPassword(t){let{username:e}=t,{confirmation_code:r,password:o}=t.formValues;return N.Auth.forgotPasswordSubmit(e,r,o)}}});var Y=d(require("xstate/lib/actions")),w=t=>(0,Y.stop)(t);var V=(0,c.createMachine)({id:"auth",initial:"idle",context:{user:void 0,config:void 0,actorRef:void 0},states:{idle:{invoke:[{src:"getCurrentUser",onDone:{actions:"setUser",target:"authenticated"},onError:"signIn"},{src:"getAmplifyConfig",onDone:{actions:"setAuthConfig"}}]},signIn:{entry:"spawnSignInActor",exit:w("signInActor"),on:{SIGN_UP:"signUp",RESET_PASSWORD:"resetPassword","done.invoke.signInActor":[{target:"signUp",cond:"shouldRedirectToSignUp"},{target:"resetPassword",cond:"shouldRedirectToResetPassword"},{target:"authenticated",actions:"setUser"}]}},signUp:{entry:"spawnSignUpActor",exit:w("signUpActor"),on:{SIGN_IN:"signIn","done.invoke.signUpActor":{target:"signIn",actions:"setUser"}}},resetPassword:{entry:"spawnResetPasswordActor",exit:w("resetPasswordActor"),on:{SIGN_IN:"signIn","done.invoke.resetPasswordActor":"signIn"}},signOut:{entry:"spawnSignOutActor",exit:[w("signOutActor"),"clearUser"],on:{"done.invoke.signOutActor":"idle"}},authenticated:{on:{SIGN_OUT:"signOut"}}},on:{CHANGE:{actions:"forwardToActor"},SUBMIT:{actions:"forwardToActor"},FEDERATED_SIGN_IN:{actions:"forwardToActor"},RESEND:{actions:"forwardToActor"},SIGN_OUT:{actions:"forwardToActor"},SIGN_IN:{actions:"forwardToActor"},SKIP:{actions:"forwardToActor"}}},{actions:{forwardToActor:(0,c.forwardTo)(t=>t.actorRef),setUser:(0,c.assign)({user:(t,e)=>e.data.user||e.data}),clearUser:(0,c.assign)({user:void 0}),setAuthConfig:(0,c.assign)({config(t,e){return e.data.auth}}),spawnSignInActor:(0,c.assign)({actorRef:(t,e)=>{var o,i,n;let r=G.withContext({authAttributes:(o=e.data)==null?void 0:o.authAttributes,user:(i=e.data)==null?void 0:i.user,intent:(n=e.data)==null?void 0:n.intent,formValues:{},validationError:{}});return(0,c.spawn)(r,{name:"signInActor"})}}),spawnSignUpActor:(0,c.assign)({actorRef:(t,e)=>{var o,i,n,m;let r=L.withContext({authAttributes:(i=(o=e.data)==null?void 0:o.authAttributes)!=null?i:{},intent:(n=e.data)==null?void 0:n.intent,formValues:{},validationError:{},login_mechanisms:(m=t.config)==null?void 0:m.login_mechanisms});return(0,c.spawn)(r,{name:"signUpActor"})}}),spawnResetPasswordActor:(0,c.assign)({actorRef:(t,e)=>{var o,i,n;let r=Z.withContext({formValues:{},intent:(o=e.data)==null?void 0:o.intent,username:(n=(i=e.data)==null?void 0:i.authAttributes)==null?void 0:n.username,validationError:{}});return(0,c.spawn)(r,{name:"resetPasswordActor"})}}),spawnSignOutActor:(0,c.assign)({actorRef:t=>{let e=Q.withContext({user:t.user});return(0,c.spawn)(e,{name:"signOutActor"})}})},guards:{shouldRedirectToSignUp:(t,e)=>{var r;return((r=e.data)==null?void 0:r.intent)?e.data.intent==="confirmSignUp":!1},shouldRedirectToResetPassword:(t,e)=>{var r;return((r=e.data)==null?void 0:r.intent)?e.data.intent==="confirmPasswordReset":!1}},services:{async getCurrentUser(){return U.Auth.currentAuthenticatedUser()},async getAmplifyConfig(){return U.Amplify.configure()}}});var $=d(require("xstate"));var ce=(0,$.interpret)(V,{devTools:!0}).start();var _=d(require("lodash"));var x={username:{label:"Username",type:"text",placeholder:"Enter your username"},email:{label:"Email",type:"email",placeholder:"Enter your email"},phone_number:{label:"Phone Number",type:"tel",placeholder:"Enter your phone number"},confirmation_code:{label:"Confirmation Code",placeholder:"Enter your confirmation code",type:"number"},password:{label:"Password",placeholder:"Enter your password",type:"password"}},T;(function(o){o.Amazon="LoginWithAmazon",o.Facebook="Facebook",o.Google="Google"})(T||(T={}));var de=t=>{var n,m,S,b,v,h;let e=(m=(n=t.config)==null?void 0:n.login_mechanisms)!=null?m:["username"],r=(b=(S=t.actorRef)==null?void 0:S.context)==null?void 0:b.validationError.username,o="text",i=e.filter(R=>(0,_.includes)(E,R)).map(R=>{var F,k;return(k=(F=x[R])==null?void 0:F.label)!=null?k:x.username.label}).join(" or ");return e.length===1&&(o=(h=(v=x[e[0]])==null?void 0:v.type)!=null?h:"text"),{label:i,type:o,error:r}},ue=t=>{var n,m;let r=((m=(n=t.config)==null?void 0:n.login_mechanisms)!=null?m:[...E]).filter(S=>(0,_.includes)(E,S)),[o,...i]=r;return{primaryAlias:o,secondaryAliases:i}},J=t=>{var e;return(e=t.context.actorRef)==null?void 0:e.getSnapshot()},me=t=>{var e;return(e=J(t))==null?void 0:e.context};var le={de:{"Account recovery requires verified contact information":"Zur\xFCcksetzen des Account ben\xF6tigt einen verifizierten Account","An account with the given email already exists.":"Ein Account mit dieser Email existiert bereits.","Back to Sign In":"Zur\xFCck zur Anmeldung","Change Password":"Passwort \xE4ndern",Code:"Code",Confirm:"Best\xE4tigen","Confirm a Code":"Code best\xE4tigen","Confirm Sign In":"Anmeldung best\xE4tigen","Confirm Sign Up":"Registrierung best\xE4tigen","Confirmation Code":"Best\xE4tigungs-Code","Create a new account":"Erstelle einen neuen Account","Create account":"Hier registrieren","Create Account":"Account erstellen",Email:"Email","Enter your password":"Geben Sie Ihr Passwort ein","Enter your username":"Geben Sie Ihren Benutzernamen ein","Forgot Password":"Passwort vergessen","Forgot your password? ":"Passwort vergessen? ","Have an account? ":"Schon registriert? ","Incorrect username or password":"Falscher Benutzername oder falsches Passwort","Invalid password format":"Ung\xFCltiges Passwort-Format","Invalid phone number format":`Ung\xFCltiges Telefonummern-Format.
              Benutze eine Nummer im Format: +12345678900`,"Lost your code? ":"Code verloren? ","New Password":"Neues Passwort","No account? ":"Kein Account? ",Password:"Passwort","Password attempts exceeded":"Die maximale Anzahl der fehlerhaften Anmeldeversuche wurde erreicht","Phone Number":"Telefonnummer","Resend Code":"Code erneut senden","Reset password":"Passwort zur\xFCcksetzen","Reset your password":"Zur\xFCcksetzen des Passworts","Send Code":"Code senden","Sign in":"Anmelden","Sign In":"Anmelden","Sign in to your account":"Melden Sie sich mit Ihrem Account an","Sign Out":"Abmelden","Sign Up":"Registrieren","Signing in":"Signing in",Skip:"\xDCberspringen",Submit:"Abschicken","User already exists":"Dieser Benutzer existiert bereits","User does not exist":"Dieser Benutzer existiert nicht",Username:"Benutzername","Username cannot be empty":"Benutzername darf nicht leer sein",Verify:"Verifizieren","Verify Contact":"Kontakt verifizieren"},es:{"Account recovery requires verified contact information":"La recuperaci\xF3n de la cuenta requiere informaci\xF3n de contacto verificada","Back to Sign In":"Iniciar sesi\xF3n","Change Password":"Cambia la contrase\xF1a",Code:"C\xF3digo",Confirm:"Confirmar","Confirm a Code":"Confirmar un c\xF3digo","Confirm Sign In":"Confirmar inicio de sesi\xF3n","Confirm Sign Up":"Confirmar Registraci\xF3n","Confirmation Code":"Codigo de confirmaci\xF3n","Create a new account":"Crear una cuenta nueva",Email:"Email","Forgot Password":"Se te olvid\xF3 la contrase\xF1a?","Incorrect username or password":"Nombre de usuario o contrase\xF1a incorrecta","Invalid password format":"Formato de contrase\xF1a inv\xE1lido","Invalid phone number format":`Formato de n\xFAmero de tel\xE9fono inv\xE1lido.
Utilice el formato de n\xFAmero de tel\xE9fono +12345678900`,"Loading...":"Cargando...","New Password":"Nueva contrase\xF1a",Password:"Contrase\xF1a","Phone Number":"N\xFAmero de tel\xE9fono","Resend a Code":"Reenviar un c\xF3digo","Resend Code":"Mandar codigo otra vez","Send Code":"Enviar c\xF3digo","Sign In":"Iniciar ses\xEDon","Sign in to your account":"Iniciar ses\xEDon","Sign Out":"Desconectar","Sign Up":"Reg\xEDstrase",Skip:"Omitir",Submit:"Enviar","User already exists":"El usuario ya existe","User does not exist":"El usuario no existe",Username:"Nombre de usuario","Username cannot be empty":"El campo de usuario no puede estar vacido",Verify:"Verificar","Verify Contact":"Verificar contacto"},fr:{"Account recovery requires verified contact information":"La r\xE9cup\xE9ration du compte n\xE9cessite des informations de contact v\xE9rifi\xE9es","An account with the given email already exists.":"Un utilisateur avec cette adresse email existe d\xE9j\xE0.","Back to Sign In":"Retour \xE0 la connexion",Change:"Modifier","Change Password":"Modifier le mot de passe",Code:"Code",Confirm:"Confirmer","Confirm a Code":"Confirmer un code","Confirm Sign In":"Confirmer la connexion","Confirm Sign Up":"Confirmer l'inscription","Confirm SMS Code":"Confirmer le code SMS","Confirm TOTP Code":"Confirmer le code TOTP","Confirmation Code":"Code de confirmation","Create a new account":"Cr\xE9er un nouveau compte","Create account":"Cr\xE9er un compte","Create Account":"Cr\xE9er un compte",Email:"Email","Enter your code":"Saisissez cotre code de confirmation","Enter your email":"Saisissez votre adresse email","Enter your password":"Saisissez votre mot de passe","Enter your phone number":"Saisissez votre num\xE9ro de t\xE9l\xE9phone","Enter your username":"Saisissez votre nom d'utilisateur","Forgot Password":"Mot de passe oubli\xE9","Forgot your password? ":"Mot de passe oubli\xE9 ? ","Have an account? ":"D\xE9j\xE0 un compte ? ",Hello:"Bonjour","Incorrect username or password":"Identifiant ou mot de passe incorrect","Invalid password format":"Format de mot de passe invalide","Invalid phone number format":"Format de num\xE9ro de t\xE9l\xE9phone invalide. Veuillez utiliser un format +12345678900","Loading...":"Chargement...","Lost your code? ":"Vous avez perdu votre code ? ","Network error":"Erreur r\xE9seau","New Password":"Nouveau mot de passe","No account? ":"Pas de compte ? ",or:"ou",Password:"Mot de passe","Phone Number":"Num\xE9ro de t\xE9l\xE9phone","Resend a Code":"Renvoyer un code","Resend Code":"Renvoyer le code","Reset password":"R\xE9initialisez votre mot de passe","Reset your password":"R\xE9initialisez votre mot de passe",Send:"Envoyer","Send Code":"M'envoyer un code","Sign in":"Se connecter","Sign In":"Se connecter","Sign in to your account":"Connexion \xE0 votre compte","Sign In with Amazon":"Se connecter avec Amazon","Sign In with AWS":"Se connecter avec AWS","Sign In with Facebook":"Se connecter avec Facebook","Sign In with Google":"Se connecter avec Google","Sign Out":"D\xE9connexion","Sign Up":"S'inscrire",Skip:"Passer",SMS:"SMS",Submit:"Soumettre","User already exists":"L'utilisateur existe d\xE9j\xE0","User does not exist":"L'utilisateur n'existe pas",Username:"Nom d'utilisateur","Username cannot be empty":"Le nom d'utilisateur doit \xEAtre renseign\xE9","Username/client id combination not found.":"L'utilisateur n'existe pas",Verify:"V\xE9rifier","Verify Contact":"V\xE9rifier le contact"},it:{"Account recovery requires verified contact information":"Ripristino del conto richiede un account verificati","An account with the given email already exists.":"Un account con questa email esiste gi\xE0.","Back to Sign In":"Torna alla Accesso","Change Password":"Cambia la password",Code:"Codice",Confirm:"Conferma","Confirm a Code":"Codice Conferma","Confirm Sign In":"Conferma di applicazione","Confirm Sign Up":"Registrazione Conferma","Confirmation Code":"Codice di verifica","Create a new account":"Creare un nuovo account","Create account":"Registrati","Create Account":"Crea account",Email:"E-mail","Enter your password":"Inserire la password","Enter your username":"Inserisci il tuo nome utente","Forgot Password":"Password dimenticata","Forgot your password? ":"Password dimenticata?","Have an account? ":"Gi\xE0 registrato?","Incorrect username or password":"Nome utente o password errati","Invalid password format":"Formato della password non valido","Invalid phone number format":"Utilizzo non valido Telefonummern formattare un numero nel formato :. 12.345.678,9 mille","Lost your code?":"Perso codice?","New Password":"Nuova password","No account? ":"Nessun account?",Password:"Password","Password attempts exceeded":"Il numero massimo di tentativi di accesso falliti \xE8 stato raggiunto","Phone Number":"Numero di telefono","Resend Code":"Codice Rispedisci","Reset password":"Ripristina password","Reset your password":"Resetta password","Send Code":"Invia codice","Sign in":"Accesso","Sign In":"Accesso","Sign in to your account":"Accedi con il tuo account a","Sign Out":"Esci","Sign Up":"Iscriviti",Skip:"Salta",Submit:"Sottoscrivi","User already exists":"Questo utente esiste gi\xE0","User does not exist":"Questo utente non esiste",Username:"Nome utente","Username cannot be empty":"Nome utente non pu\xF2 essere vuoto",Verify:"Verifica","Verify Contact":"Contatto verifica"},ja:{"Account recovery requires verified contact information":"\u30A2\u30AB\u30A6\u30F3\u30C8\u306E\u5FA9\u65E7\u306B\u306F\u78BA\u8A8D\u6E08\u307F\u306E\u9023\u7D61\u5148\u304C\u5FC5\u8981\u3067\u3059","An account with the given email already exists.":"\u5165\u529B\u3055\u308C\u305F\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9\u306E\u30A2\u30AB\u30A6\u30F3\u30C8\u304C\u65E2\u306B\u5B58\u5728\u3057\u307E\u3059","Back to Sign In":"\u30B5\u30A4\u30F3\u30A4\u30F3\u306B\u623B\u308B","Change Password":"\u30D1\u30B9\u30EF\u30FC\u30C9\u3092\u5909\u3048\u308B ",Code:"\u30B3\u30FC\u30C9",Confirm:"\u78BA\u5B9A","Confirm a Code":"\u30B3\u30FC\u30C9\u3092\u78BA\u8A8D","Confirm Sign In":"\u30B5\u30A4\u30F3\u30A4\u30F3\u3059\u308B","Confirm Sign Up":"\u767B\u9332\u3059\u308B","Confirmation Code":"\u78BA\u8A8D\u30B3\u30FC\u30C9","Create a new account":"\u65B0\u3057\u3044\u30A2\u30AB\u30A6\u30F3\u30C8\u3092\u4F5C\u308B","Create account":"\u30A2\u30AB\u30A6\u30F3\u30C8\u3092\u4F5C\u308B ","Create Account":"\u30A2\u30AB\u30A6\u30F3\u30C8\u3092\u4F5C\u308B",Email:"\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9","Enter your password":"\u30D1\u30B9\u30EF\u30FC\u30C9\u3092\u5165\u529B ","Enter your username":"\u30E6\u30FC\u30B6\u30FC\u540D\u3092\u5165\u529B ","Forgot Password":"\u30D1\u30B9\u30EF\u30FC\u30C9\u3092\u5FD8\u308C\u305F ","Forgot your password? ":"\u30D1\u30B9\u30EF\u30FC\u30C9\u3092\u5FD8\u308C\u307E\u3057\u305F\u304B\uFF1F ","Have an account? ":"\u30A2\u30AB\u30A6\u30F3\u30C8\u3092\u6301\u3063\u3066\u3044\u307E\u3059\u304B\uFF1F","Incorrect username or password":"\u30E6\u30FC\u30B6\u30FC\u540D\u304B\u30D1\u30B9\u30EF\u30FC\u30C9\u304C\u7570\u306A\u308A\u307E\u3059 ","Invalid password format":"\u30D1\u30B9\u30EF\u30FC\u30C9\u306E\u5F62\u5F0F\u304C\u7121\u52B9\u3067\u3059 ","Invalid phone number format":`\u4E0D\u6B63\u306A\u96FB\u8A71\u756A\u53F7\u306E\u5F62\u5F0F\u3067\u3059\u3002
+12345678900 \u306E\u5F62\u5F0F\u3067\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044`,"Lost your code? ":"\u30B3\u30FC\u30C9\u3092\u5931\u304F\u3057\u307E\u3057\u305F\u304B\uFF1F","New Password":"\u65B0\u3057\u3044\u30D1\u30B9\u30EF\u30FC\u30C9","No account? ":"\u30A2\u30AB\u30A6\u30F3\u30C8\u304C\u7121\u3044\u3068\u304D ",Password:"\u30D1\u30B9\u30EF\u30FC\u30C9 ","Password attempts exceeded":"\u30B5\u30A4\u30F3\u30A4\u30F3\u306E\u8A66\u884C\u56DE\u6570\u304C\u4E0A\u9650\u306B\u9054\u3057\u307E\u3057\u305F","Phone Number":"\u96FB\u8A71\u756A\u53F7","Resend Code":"\u30B3\u30FC\u30C9\u3092\u518D\u9001\u4FE1","Reset password":"\u30D1\u30B9\u30EF\u30FC\u30C9\u3092\u30EA\u30BB\u30C3\u30C8 ","Reset your password":"\u30D1\u30B9\u30EF\u30FC\u30C9\u3092\u30EA\u30BB\u30C3\u30C8\u3059\u308B","Send Code":"\u30B3\u30FC\u30C9\u3092\u9001\u4FE1","Sign in":"\u30B5\u30A4\u30F3\u30A4\u30F3","Sign In":"\u30B5\u30A4\u30F3\u30A4\u30F3 ","Sign in to your account":"\u30A2\u30AB\u30A6\u30F3\u30C8\u306B\u30B5\u30A4\u30F3\u30A4\u30F3 ","Sign In with Amazon":"Amazon\u3067\u30B5\u30A4\u30F3\u30A4\u30F3","Sign In with Facebook":"Facebook\u3067\u30B5\u30A4\u30F3\u30A4\u30F3","Sign In with Google":"Google\u3067\u30B5\u30A4\u30F3\u30A4\u30F3","Sign Out":"\u30B5\u30A4\u30F3\u30A2\u30A6\u30C8 ","Sign Up":"\u767B\u9332 ",Skip:"\u30B9\u30AD\u30C3\u30D7",Submit:"\u9001\u4FE1","User already exists":"\u65E2\u306B\u30E6\u30FC\u30B6\u30FC\u304C\u5B58\u5728\u3057\u3066\u3044\u307E\u3059 ","User does not exist":"\u30E6\u30FC\u30B6\u30FC\u304C\u5B58\u5728\u3057\u307E\u305B\u3093 ",Username:"\u30E6\u30FC\u30B6\u30FC\u540D ","Username cannot be empty":"\u30E6\u30FC\u30B6\u30FC\u540D\u306F\u5165\u529B\u5FC5\u9808\u3067\u3059",Verify:"\u78BA\u8A8D","Verify Contact":"\u9023\u7D61\u5148\u3092\u78BA\u8A8D"},zh:{"Account recovery requires verified contact information":"\u8D26\u6237\u6062\u590D\u9700\u8981\u9A8C\u8BC1\u8FC7\u7684\u8054\u7CFB\u65B9\u5F0F","Back to Sign In":"\u56DE\u5230\u767B\u5F55","Change Password":"\u6539\u53D8\u5BC6\u7801",Code:"\u786E\u8BA4\u7801",Confirm:"\u786E\u8BA4","Confirm a Code":"\u786E\u8BA4\u7801","Confirm Sign In":"\u786E\u8BA4\u767B\u5F55","Confirm Sign Up":"\u786E\u8BA4\u6CE8\u518C",Email:"\u90AE\u7BB1","Forgot Password":"\u5FD8\u8BB0\u5BC6\u7801","Incorrect username or password":"\u7528\u6237\u540D\u6216\u5BC6\u7801\u9519\u8BEF","Invalid password format":"\u5BC6\u7801\u683C\u5F0F\u9519\u8BEF","Invalid phone number format":"\u7535\u8BDD\u683C\u5F0F\u9519\u8BEF\uFF0C\u8BF7\u4F7F\u7528\u683C\u5F0F +12345678900","New Password":"\u65B0\u5BC6\u7801",Password:"\u5BC6\u7801","Phone Number":"\u7535\u8BDD","Resend a Code":"\u91CD\u53D1\u786E\u8BA4\u7801","Send Code":"\u53D1\u9001\u786E\u8BA4\u7801","Sign In":"\u767B\u5F55","Sign Out":"\u9000\u51FA","Sign Up":"\u6CE8\u518C",Skip:"\u8DF3\u8FC7",Submit:"\u63D0\u4EA4","User already exists":"\u7528\u6237\u5DF2\u7ECF\u5B58\u5728","User does not exist":"\u7528\u6237\u4E0D\u5B58\u5728",Username:"\u7528\u6237\u540D",Verify:"\u9A8C\u8BC1","Verify Contact":"\u9A8C\u8BC1\u8054\u7CFB\u65B9\u5F0F"}};0&&(module.exports={AuthChallengeNames,FederatedIdentityProviders,authInputAttributes,authMachine,authService,dict,getActorContext,getActorState,getAliasInfoFromContext,getConfiguredAliases,socialProviderLoginMechanisms,userNameAliasArray});
