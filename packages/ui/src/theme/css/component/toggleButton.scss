.amplify-togglebutton {
  // This required to override default button styling
  background-color: var(--amplify-internal-togglebutton-background-color);
  border-color: var(--amplify-internal-togglebutton-border-color);
  color: var(--amplify-internal-togglebutton-color);
  //these internal css variables are used to update the values that are influenced by multiple modified states
  --amplify-internal-togglebutton-background-color: initial;
  --amplify-internal-togglebutton-border-color: var(
    --amplify-components-togglebutton-border-color
  );
  --amplify-internal-togglebutton-color: var(
    --amplify-components-togglebutton-color
  );

  --amplify-internal-togglebutton-hover-background-color: var(
    --amplify-components-togglebutton-hover-background-color
  );
  &:hover {
    background-color: var(
      --amplify-internal-togglebutton-hover-background-color
    );
    border-color: var(--amplify-internal-togglebutton-border-color);
    color: var(--amplify-internal-togglebutton-color);

    //when both focus and hover are active, use the hover background color because focus is just using the default background color
    --amplify-internal-togglebutton-focus-background-color: var(
      --amplify-internal-togglebutton-hover-background-color
    );
  }

  //internal focus variables to be overwritten by other classes
  --amplify-internal-togglebutton-focus-background-color: var(
    --amplify-internal-togglebutton-background-color
  );
  --amplify-internal-togglebutton-focus-border-color: var(
    --amplify-components-togglebutton-focus-border-color
  );
  --amplify-internal-togglebutton-focus-color: var(
    --amplify-components-togglebutton-focus-color
  );
  &:focus {
    background-color: var(
      --amplify-internal-togglebutton-focus-background-color
    );
    border-color: var(--amplify-internal-togglebutton-focus-border-color);
    color: var(--amplify-internal-togglebutton-focus-color);
  }

  //internal active variables to be overwritten by other classes
  --amplify-internal-togglebutton-active-background-color: var(
    --amplify-components-togglebutton-active-background-color
  );
  &:active {
    background-color: var(
      --amplify-internal-togglebutton-active-background-color
    );
  }

  //internal disabled variables to be overwritten by other classes
  --amplify-internal-togglebutton-disabled-background-color: var(
    --amplify-components-togglebutton-disabled-background-color
  );
  --amplify-internal-togglebutton-disabled-border-color: var(
    --amplify-components-togglebutton-disabled-border-color
  );
  --amplify-internal-togglebutton-disabled-color: var(
    --amplify-components-togglebutton-disabled-color
  );
  &:disabled {
    background-color: var(
      --amplify-internal-togglebutton-disabled-background-color
    );
    border-color: var(--amplify-internal-togglebutton-disabled-border-color);
    color: var(--amplify-internal-togglebutton-disabled-color);
  }

  //pressed state for the default variation
  &--pressed {
    --amplify-internal-togglebutton-background-color: var(
      --amplify-components-togglebutton-pressed-background-color
    );
    --amplify-internal-togglebutton-color: var(
      --amplify-components-togglebutton-pressed-color
    );
    &:hover:not(:disabled) {
      --amplify-internal-togglebutton-hover-background-color: var(
        --amplify-components-togglebutton-pressed-hover-background-color
      );
    }
    &:disabled {
      --amplify-internal-togglebutton-disabled-background-color: var(
        --amplify-components-togglebutton-pressed-background-color
      );
      --amplify-internal-togglebutton-disabled-color: var(
        --amplify-components-togglebutton-pressed-color
      );
    }
  }

  &--primary {
    --amplify-internal-togglebutton-primary-background-color: var(
      --amplify-components-togglebutton-primary-background-color
    );
    --amplify-internal-togglebutton-background-color: var(
      --amplify-internal-togglebutton-primary-background-color
    );
    --amplify-internal-togglebutton-primary-border-color: var(
      --amplify-components-togglebutton-border-color
    );
    --amplify-internal-togglebutton-border-color: var(
      --amplify-internal-togglebutton-primary-border-color
    );
    --amplify-internal-togglebutton-primary-color: var(
      --amplify-components-togglebutton-color
    );
    --amplify-internal-togglebutton-color: var(
      --amplify-internal-togglebutton-primary-color
    );

    border-width: var(--amplify-components-togglebutton-primary-border-width);

    //overwrite variables
    --amplify-internal-togglebutton-hover-background-color: var(
      --amplify-components-togglebutton-primary-background-color
    );
    --amplify-internal-togglebutton-focus-border-color: var(
      --amplify-components-togglebutton-border-color
    );
    --amplify-internal-togglebutton-focus-color: var(
      --amplify-components-togglebutton-color
    );
    --amplify-internal-togglebutton-active-background-color: var(
      --amplify-components-togglebutton-primary-background-color
    );
    --amplify-internal-togglebutton-disabled-background-color: var(
      --amplify-components-togglebutton-primary-background-color
    );
    --amplify-internal-togglebutton-disabled-border-color: var(
      --amplify-components-togglebutton-border-color
    );
    --amplify-internal-togglebutton-disabled-color: var(
      --amplify-components-togglebutton-color
    );

    //these variables are being made so that the primary pressed state can overwrite them
    --amplify-internal-togglebutton-primary-focus-background-color: var(
      --amplify-components-togglebutton-primary-focus-background-color
    );
    --amplify-internal-togglebutton-primary-focus-border-color: var(
      --amplify-components-togglebutton-primary-focus-border-color
    );
    --amplify-internal-togglebutton-primary-focus-color: var(
      --amplify-components-togglebutton-primary-focus-color
    );
    &:focus {
      --amplify-internal-togglebutton-focus-background-color: var(
        --amplify-internal-togglebutton-primary-focus-background-color
      );
      --amplify-internal-togglebutton-focus-border-color: var(
        --amplify-internal-togglebutton-primary-focus-border-color
      );
      --amplify-internal-togglebutton-focus-color: var(
        --amplify-internal-togglebutton-primary-focus-color
      );

      box-shadow: var(
        --amplify-components-togglebutton-primary-focus-box-shadow
      );

      //prod puts primary hover border color before focus
      --amplify-internal-togglebutton-primary-hover-border-color: var(
        --amplify-internal-togglebutton-primary-focus-border-color
      );
    }

    //these variables are being made so that the primary pressed state can overwrite them
    --amplify-internal-togglebutton-primary-hover-background-color: var(
      --amplify-components-togglebutton-primary-hover-background-color
    );
    //there is no primary hover border color but this is being made and set to its default value so that it can be overwritten by the pressed primary hover color
    --amplify-internal-togglebutton-primary-hover-border-color: var(
      --amplify-internal-togglebutton-primary-border-color
    );
    --amplify-internal-togglebutton-primary-hover-color: var(
      --amplify-components-togglebutton-primary-hover-color
    );
    &:hover {
      background-color: var(
        --amplify-internal-togglebutton-primary-hover-background-color
      );
      border-color: var(
        --amplify-internal-togglebutton-primary-hover-border-color
      );
      color: var(--amplify-internal-togglebutton-primary-hover-color);
      //update the focus background color in case both states are active default puts focus first but prod primary puts hover first
      --amplify-internal-togglebutton-focus-background-color: var(
        --amplify-internal-togglebutton-primary-hover-background-color
      );
    }

    //these variables are being made so that they can be overwritten by the primary pressed state
    --amplify-internal-togglebutton-primary-disabled-background-color: var(
      --amplify-components-togglebutton-primary-disabled-background-color
    );
    //this property doesn't have a specific value for this state but is being created and set to the default value so that it can be overwritten in the primary pressed state
    --amplify-internal-togglebutton-primary-disabled-border-color: var(
      --amplify-internal-togglebutton-primary-border-color
    );
    --amplify-internal-togglebutton-primary-disabled-color: var(
      --amplify-components-togglebutton-primary-disabled-color
    );
    &:disabled {
      --amplify-internal-togglebutton-disabled-background-color: var(
        --amplify-internal-togglebutton-primary-disabled-background-color
      );
      --amplify-internal-togglebutton-disabled-border-color: var(
        --amplify-internal-togglebutton-primary-disabled-border-color
      );
      --amplify-internal-togglebutton-disabled-color: var(
        --amplify-internal-togglebutton-primary-disabled-color
      );
    }
  }

  &--pressed {
    //these are the primary pressed values
    //these are the primary pressed values which should beat everything above it
    --amplify-internal-togglebutton-primary-background-color: var(
      --amplify-components-togglebutton-primary-pressed-background-color
    );
    --amplify-internal-togglebutton-primary-border-color: var(
      --amplify-components-togglebutton-primary-pressed-border-color
    );
    --amplify-internal-togglebutton-primary-color: var(
      --amplify-components-togglebutton-primary-pressed-color
    );

    //set the pressed primary states
    &:focus {
      --amplify-internal-togglebutton-primary-focus-background-color: var(
        --amplify-components-togglebutton-primary-pressed-focus-background-color
      );
      --amplify-internal-togglebutton-primary-focus-border-color: var(
        --amplify-components-togglebutton-primary-pressed-focus-border-color
      );
    }

    &:hover:not(:disabled) {
      --amplify-internal-togglebutton-primary-hover-background-color: var(
        --amplify-components-togglebutton-primary-pressed-hover-background-color
      );
      --amplify-internal-togglebutton-primary-hover-border-color: var(
        --amplify-components-togglebutton-primary-pressed-hover-border-color
      );
      //because of the ordering focus color is taking precedence over hover, in prod this just sets the background color and is more specific than everything else.
      --amplify-internal-togglebutton-primary-focus-background-color: var(
        --amplify-components-togglebutton-primary-pressed-hover-background-color
      );
    }

    //overwrite the primary states with the default pressed primary values because pressed primary should beat out primary states
    &:focus {
      --amplify-internal-togglebutton-primary-focus-color: var(
        --amplify-components-togglebutton-primary-pressed-color
      );
    }

    //here we don't have to omit the values being declared above in the hover primary pressed state because the not(:disabled) selector gives that rule a higher specificity than this one
    &:hover {
      --amplify-internal-togglebutton-primary-hover-background-color: var(
        --amplify-components-togglebutton-primary-hover-background-color
      );
      //there is no primary hover border color but this is being made and set to its default value so that it can be overwritten by the pressed primary hover color
      --amplify-internal-togglebutton-primary-hover-border-color: var(
        --amplify-internal-togglebutton-primary-border-color
      );
      --amplify-internal-togglebutton-primary-hover-color: var(
        --amplify-components-togglebutton-primary-pressed-color
      );
    }

    &:disabled {
      --amplify-internal-togglebutton-primary-disabled-background-color: var(
        --amplify-components-togglebutton-primary-pressed-background-color
      );
      --amplify-internal-togglebutton-primary-disabled-border-color: var(
        --amplify-components-togglebutton-primary-pressed-border-color
      );
      --amplify-internal-togglebutton-primary-disabled-color: var(
        --amplify-components-togglebutton-primary-pressed-color
      );
    }
  }

  &--link {
    --amplify-internal-togglebutton-link-background-color: var(
      --amplify-components-togglebutton-background-color
    );
    --amplify-internal-togglebutton-link-color: var(
      --amplify-components-togglebutton-link-color
    );

    background-color: var(
      --amplify-internal-togglebutton-link-background-color
    );
    color: var(--amplify-internal-togglebutton-link-color);

    --amplify-internal-togglebutton-link-hover-background-color: var(
      --amplify-components-togglebutton-link-hover-background-color
    );
    --amplify-internal-togglebutton-link-hover-color: var(
      --amplify-components-togglebutton-link-hover-color
    );
    &:hover {
      background-color: var(
        --amplify-internal-togglebutton-link-hover-background-color
      );
      color: var(--amplify-internal-togglebutton-link-hover-color);
    }

    &:focus {
      --amplify-internal-togglebutton-link-focus-background-color: var(
        --amplify-components-togglebutton-link-focus-background-color
      );
      --amplify-internal-togglebutton-link-focus-color: var(
        --amplify-components-togglebutton-link-focus-color
      );

      --amplify-internal-togglebutton-focus-background-color: var(
        --amplify-internal-togglebutton-link-focus-background-color
      );
      --amplify-internal-togglebutton-focus-color: var(
        --amplify-internal-togglebutton-link-focus-color
      );
    }

    &:disabled {
      --amplify-internal-togglebutton-disabled-color: var(
        --amplify-components-togglebutton-link-disabled-color
      );
    }
  }

  //these are the styles for the pressed link state
  &--pressed {
    --amplify-internal-togglebutton-link-color: var(
      --amplify-components-togglebutton-link-pressed-color
    );
    --amplify-internal-togglebutton-link-background-color: var(
      --amplify-components-togglebutton-link-pressed-background-color
    );

    &:hover {
      --amplify-internal-togglebutton-link-hover-background-color: var(
        --amplify-components-togglebutton-link-pressed-hover-background-color
      );
      --amplify-internal-togglebutton-link-hover-color: var(
        --amplify-components-togglebutton-link-pressed-color
      );
    }

    &:focus {
      --amplify-internal-togglebutton-link-focus-background-color: var(
        --amplify-components-togglebutton-link-pressed-background-color
      );
      --amplify-internal-togglebutton-link-focus-color: var(
        --amplify-components-togglebutton-link-pressed-color
      );
    }
  }
}
