// Adapted from https://github.com/radix-ui/primitives/blob/main/packages/react/id/src/id.tsx#L8
import * as React from 'react';
import { useLayoutEffect } from './useLayoutEffect';

// Prefixed autogenerated id created by useStableId
export const AUTO_GENERATED_ID_PREFIX = 'amplify-id';

export type UseStableId = (id?: string) => string;

// Create a local version of React.useId which will reference React.useId for React 18
// and fallback to noop for React 17 and below
// Note: We use `toString()` to prevent bundlers from trying to `import { useId } from 'react';`
// since it doesn't exist in React 17 and below (prevents https://github.com/aws-amplify/amplify-ui/issues/1154)
const useReactId: () => string | (() => undefined) =
  // disable eslint below to allow usage of casting React to `any`, which ensures that TS
  // does not get confused about the existence of `useId` in React 17 and below
  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
  ((React as any)['useId'.toString()] as () => string) || (() => undefined);

let count = 0;

/**
 * Create a uuid to use with amplify fields unless
 * an id is provided
 * @param id user specified id
 * @returns string
 */
export const useStableId: UseStableId = (id) => {
  const [stableId, setStableId] = React.useState<string | undefined>(
    useReactId()
  );

  // React versions older than 18 will have client-side ids only
  useLayoutEffect(() => {
    if (!id) {
      setStableId((reactId: string | undefined) => reactId ?? String(count++));
    }
  }, [id]);
  return id || (stableId ? `${AUTO_GENERATED_ID_PREFIX}-${stableId}` : '');
};
