name: POC / Pull Environments

on:
  pull_request_target:
    branches: [main]
    types: [opened, synchronize, labeled]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  setup:
    runs-on: ubuntu-latest
    # We run tests only if it's:
    #   1) pull request not from a fork (ie. internal PR), or
    #   2) pull request from a fork (ie. external PR) that was added "run-tests" label
    if: |
      (github.event.pull_request.head.repo.full_name == github.repository) ||
      (github.event.action == 'labeled' && github.event.label.name == 'run-tests')
    steps:
      - name: Remove run-tests label, if applicable
        if: always() && github.event.label.name == 'run-tests'
        uses: actions/github-script@0.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo } } = context;
            const label = 'run-tests';
            github.issues.removeLabel({ owner, repo, issue_number, name: label });
  pull:
    runs-on: ubuntu-latest
    environment: ci
    needs: setup
    steps:
      - name: Checkout Amplify UI
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Setup Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          # cache: 'yarn'
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MINS: 2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.E2E_TEST_ROLE_ARN }}
      - name: Create temp AWS credentials file
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && \
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY && \
          aws configure set aws_session_token $AWS_SESSION_TOKEN && \
          aws configure set default.region $AWS_REGION
      - name: Add Amplify CLI
        run: yarn global add @aws-amplify/cli
      - name: Pull down AWS environments
        run: yarn environments auth pull:email
      - run: ls environments/auth/auth-with-email/src
