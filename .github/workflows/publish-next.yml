# Description: This workflow runs unit + e2e tests, then publishes UI packages
#              to `@next` NPM tag.
#
# Triggered by: merge to `main`

name: Test and Publish / next

concurrency:
  group: e2e-${{ github.sha }}
  cancel-in-progress: true

on:
  push:
    branches: [main]

jobs:
  test:
    uses: aws-amplify/amplify-ui/.github/workflows/reusable-e2e.yml@main
    with:
      commit: ${{ github.sha }}
      repository: ${{ github.repository }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} # TODO: Remove this
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} #TODO: Remove this
      AWS_ACCESS_KEY_ID_AUTH: ${{ secrets.AWS_ACCESS_KEY_ID_AUTH }}
      AWS_SECRET_ACCESS_KEY_AUTH: ${{ secrets.AWS_SECRET_ACCESS_KEY_AUTH }}
      AWS_ACCESS_KEY_ID_DATASTORE: ${{ secrets.AWS_ACCESS_KEY_ID_DATASTORE }}
      AWS_SECRET_ACCESS_KEY_DATASTORE: ${{ secrets.AWS_SECRET_ACCESS_KEY_DATASTORE }}
      AWS_ACCESS_KEY_ID_GEO: ${{ secrets.AWS_ACCESS_KEY_ID_GEO }}
      AWS_SECRET_ACCESS_KEY_GEO: ${{ secrets.AWS_SECRET_ACCESS_KEY_GEO }}
      DOMAIN: ${{ secrets.DOMAIN }}
      PHONE_NUMBER: ${{ secrets.PHONE_NUMBER }}
      USERNAME: ${{ secrets.USERNAME }}
      NEW_PASSWORD: ${{ secrets.NEW_PASSWORD }}
      VALID_PASSWORD: ${{ secrets.VALID_PASSWORD }}
      SITE_URL: ${{ secrets.SITE_URL }}
      DOCSEARCH_DOCS_APP_ID: ${{ secrets.DOCSEARCH_DOCS_APP_ID }}
      DOCSEARCH_DOCS_API_KEY: ${{ secrets.DOCSEARCH_DOCS_API_KEY }}
      DOCSEARCH_DOCS_INDEX_NAME: ${{ secrets.DOCSEARCH_DOCS_INDEX_NAME }}

  guides:
    runs-on: ubuntu-latest
    environment: ci
    env:
      NODE_ENV: test
    strategy:
      fail-fast: false
      matrix:
        include:
          - path: ./guides/react/protected-routes
            tags: '@guides and not @todo-guides'

    steps:
      - name: Checkout Amplify UI
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Setup Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'

      - name: Restore cypress runner Cache
        uses: actions/cache@v3
        id: restore-cypress-cache
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('yarn.lock') }}
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MINS: 1

      - name: Install packages
        run: yarn install
      - name: Add Amplify CLI
        run: yarn global add @aws-amplify/cli
      - name: Get CLI versions
        id: cli-version
        run: echo "::set-output name=version::$(amplify --version)"
      - name: Pull down AWS environments
        if: steps.environments-cache.outputs.cache-hit != 'true'
        run: yarn environments auth pull:email
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_AUTH }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_AUTH }}

      - name: Install guides
        run: yarn install
        working-directory: ${{ matrix.path }}

      - name: Build guides
        run: yarn build
        working-directory: ${{ matrix.path }}

      - name: Start guides site
        run: yarn start & npx wait-on -c waitOnConfig.json -t 20000 http-get://localhost:3000
        working-directory: ${{ matrix.path }}

      - name: Run E2E tests against guides
        run: yarn workspace e2e test:guides
        env:
          # Override on the default value in `cypress.json` with framework-specific tag
          TAGS: '${{ matrix.tags }}'

          # Env values for testing flows
          DOMAIN: ${{ secrets.DOMAIN }}
          PHONE_NUMBER: ${{ secrets.PHONE_NUMBER }}
          USERNAME: ${{ secrets.USERNAME }}
          NEW_PASSWORD: ${{ secrets.NEW_PASSWORD }}
          VALID_PASSWORD: ${{ secrets.VALID_PASSWORD }}

  publish:
    needs: [test, guides]
    uses: ./.github/workflows/reusable-tagged-publish.yml
    with:
      dist-tag: next
    secrets:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  build-test:
    needs: publish
    runs-on: ubuntu-latest
    environment: ci
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Add Amplify CLI
        run: yarn global add @aws-amplify/cli
      - name: Get CLI versions
        id: cli-version
        run: echo "::set-output name=version::$(amplify --version)"
      - name: Create or restore environments cache
        id: environments-cache
        uses: actions/cache@v3
        with:
          path: canary/environments/**/aws-exports.js
          key: ${{ runner.os }}-canary-environments-${{ steps.cli-version.outputs.version }}-${{ hashFiles('canary/environments/**/amplify/**') }}
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MINS: 1
      - name: Pull down AWS environments
        if: steps.environments-cache.outputs.cache-hit != 'true'
        run: yarn pull
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        working-directory: ./canary
      - name: Setup canary apps against @next
        run: yarn setup:next
        working-directory: ./canary
      - name: Run yarn install on each sample app
        run: yarn install
        working-directory: ./canary
      - name: Run yarn build on each sample app
        run: yarn build
        working-directory: ./canary

  log-failure-metric:
    # Send a failure data point to metric PublishNextFailure in github-workflows@ us-east-2, if it's a failure
    runs-on: ubuntu-latest
    environment: ci
    needs: build-test
    if: ${{ failure() }}
    steps:
      - name: Log failure data point to metric PublishNextFailure
        uses: aws-amplify/amplify-ui/.github/actions/log-metric@main
        with:
          metric-name: PublishNextFailure
          value: 1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_METRIC_LOGGER }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_METRIC_LOGGER }}
          AWS_REGION: us-east-2

  log-success-metric:
    # Send a success data point to metric PublishNextFailure in github-workflows@ us-east-2, if it's a success
    runs-on: ubuntu-latest
    environment: ci
    needs: build-test
    if: ${{ success() }}
    steps:
      - name: Log success data point to metric PublishNextFailure
        uses: aws-amplify/amplify-ui/.github/actions/log-metric@main
        with:
          metric-name: PublishNextFailure
          value: 0
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_METRIC_LOGGER }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_METRIC_LOGGER }}
          AWS_REGION: us-east-2
