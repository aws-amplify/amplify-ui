# Description: this is a reusable workflow that runs build on mega-apps that have all the connected components for React Native.
#
# See build-system-test-react-native.yml for usage.
on:
  workflow_call:
    inputs:
      dist-tag:
        required: true
        type: string

jobs:
  build:
    runs-on: macos-13
    environment: ci
    strategy:
      fail-fast: false
      matrix:
        framework: [react-native]
        framework-version:
          [
            # uncomment to enable
            # { formatted: latest, value: latest },
            { formatted: 075, value: 0.75 },
            { formatted: 074, value: 0.74 },
            { formatted: 073, value: 0.73 },
            { formatted: 072, value: 0.72 },
            { formatted: 071, value: 0.71 },
          ]
        build-tool: [cli, expo]
        build-tool-version: [latest]
        pkg-manager: [npm]
        node-version: [20]
        # uncomment to enable
        # platform: [ios, android]
        platform: [android]
        logfile: [test.log]
        exclude:
          - build-tool: expo
            platform: ios
          - build-tool: expo
            platform: android
            framework-version: { formatted: '075', value: '0.75' }
          - build-tool: expo
            platform: android
            framework-version: { formatted: '074', value: '0.74' }
          - build-tool: expo
            platform: android
            framework-version: { formatted: '073', value: '0.73' }
          - build-tool: expo
            platform: android
            framework-version: { formatted: '072', value: '0.72' }
          - build-tool: expo
            platform: android
            framework-version: { formatted: '071', value: '0.71' }
        include:
          # Expo makes you specify a version of the SDK that supports that a particular version of React Native 
          # https://stackoverflow.com/questions/63463373/create-an-expo-project-with-a-specific-version 
          - framework: react-native
            framework-version: { formatted: 070, value: '0.70' }
            build-tool: expo
            build-tool-version: 47
            platform: android
            pkg-manager: npm
            node-version: 20
            logfile: test.log
          - framework: react-native
            framework-version: { formatted: 071, value: '0.71' }
            build-tool: expo
            build-tool-version: 48
            platform: android
            pkg-manager: npm
            node-version: 20
            logfile: test.log
          - framework: react-native
            framework-version: { formatted: 072, value: '0.72' }
            build-tool: expo
            build-tool-version: 49
            platform: android
            pkg-manager: npm
            node-version: 20
            logfile: test.log
          - framework: react-native
            framework-version: { formatted: 073, value: '0.73' }
            build-tool: expo
            build-tool-version: 50
            platform: android
            pkg-manager: npm
            node-version: 20
            logfile: test.log
          - framework: react-native
            framework-version: { formatted: 074, value: '0.74' }
            build-tool: expo
            build-tool-version: 51
            platform: android
            pkg-manager: npm
            node-version: 20
            logfile: test.log
          - framework: react-native
            framework-version: { formatted: 075, value: '0.75' }
            build-tool: expo
            build-tool-version: 51
            platform: android
            pkg-manager: npm
            node-version: 20
            logfile: test.log

    env:
      MEGA_APP_NAME: rn${{ matrix.framework-version.formatted }}${{ matrix.build-tool }}${{ matrix.build-tool-version }}${{ matrix.platform }}ui${{ inputs.dist-tag }}
      EMULATOR_PORT: 5554
    steps:
      - name: Checkout Amplify UI
        uses: actions/checkout@b80ff79f1755d06ba70441c368a6fe801f5f3a62 # v4.1.3 https://github.com/actions/checkout/commit/cd7d8d697e10461458bc61a30d094dc601a8b017
        with:
          persist-credentials: false
      - name: Setup Node.js ${{ matrix.node-version }} with ${{ matrix.pkg-manager }}
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2 https://github.com/actions/setup-node/commit/60edb5dd545a775178f52524783378180af0d1f8
        with:
          node-version: ${{ matrix.node-version }}
          cache: ${{ matrix.pkg-manager }}
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MINS: 2

      - name: Restore CocoaPods cache
        if: ${{ matrix.platform == 'ios' }}
        id: restore-cocoapods-cache
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2 https://github.com/actions/cache/commit/0c45773b623bea8c8e75f6c82b208c3cf94ea4f9
        with:
          path: ./examples/react-native/ios/Pods
          key: ${{ runner.os }}-cocoapods
          restore-keys: pods-${{ hashFiles('examples/react-native/ios/Podfile.lock') }}
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MINS: 1
      - name: Restore node_modules cache
        if: ${{ matrix.platform == 'ios' }}
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2 https://github.com/actions/cache/commit/0c45773b623bea8c8e75f6c82b208c3cf94ea4f9
        id: restore-cache
        with:
          path: |
            ./node_modules
            **/node_modules
          key: ${{ runner.os }}-nodemodules
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MINS: 3
      - name: Install Java 17
        if: ${{ matrix.platform == 'android' }}
        uses: actions/setup-java@de1bb2b0c5634f0fc4438d7aa9944e68f9bf86cc # 3.6.0
        with:
          distribution: 'corretto' # Amazon Corretto Build of OpenJDK
          java-version: '17'

      - name: Install iOS simulator
        if: ${{ matrix.platform == 'ios' }}
        run: |
          brew tap wix/brew
          brew install applesimutils
          brew install watchman
          brew link --overwrite python@3.11
          echo "ruby --version"
          ruby --version
        continue-on-error: true # brew overwrite step addresses a python install issue: https://github.com/actions/runner-images/issues/8500
      - name: Update CocoaPods
        if: ${{ matrix.platform == 'ios' }}
        run: |
          gem update cocoapods xcodeproj
          yarn react-native-example ios:pod-install

      - name: Install Android emulator
        if: ${{ matrix.platform == 'android' }}
        run: |
          echo -e "echo \$ANDROID_HOME"
          echo $ANDROID_HOME
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install 'build-tools;33.0.2' platform-tools
          echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "system-images;android-27;default;x86_64"
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd --force --name Pixel_5_API_27 --device "pixel_5" --abi x86_64 --package "system-images;android-27;default;x86_64"
          printf 'hw.cpu.ncore=2\n' >> ~/.android/avd/Pixel_5_API_27.avd/config.ini
          printf 'hw.ramSize=2048\n' >> ~/.android/avd/Pixel_5_API_27.avd/config.ini
          printf 'hw.heapSize=576\n' >> ~/.android/avd/Pixel_5_API_27.avd/config.ini
      - name: Start Android emulator
        if: ${{ matrix.platform == 'android' }}
        run: |
          nohup $ANDROID_HOME/emulator/emulator -avd Pixel_5_API_27 -port ${{ env.EMULATOR_PORT }} -no-boot-anim -no-audio -no-snapshot-load -gpu host -accel on &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
          $ANDROID_HOME/platform-tools/adb devices
          # disable spell checker
          $ANDROID_HOME/platform-tools/adb shell settings put secure spell_checker_enabled 0
          # disable animations
          $ANDROID_HOME/platform-tools/adb shell settings put global window_animation_scale 0.0
          $ANDROID_HOME/platform-tools/adb shell settings put global transition_animation_scale 0.0
          $ANDROID_HOME/platform-tools/adb shell settings put global animator_duration_scale 0.0

      - name: Create MegaApp ${{ env.MEGA_APP_NAME }} and run build on NodeJS ${{ matrix.node-version }}
        run: npm run setup:${{matrix.framework}}:${{matrix.build-tool}} -- --name ${{ env.MEGA_APP_NAME }} --platform ${{matrix.platform}} --tag ${{inputs.dist-tag}} --framework-version ${{matrix.framework-version.value}} --build-tool-version ${{matrix.build-tool-version}}
        shell: bash
        working-directory: build-system-tests
      - name: Detect Mega App Error in Log
        run: npm run checkReactNativeLogs -- --log-file-name ${{ matrix.logfile }} --mega-app-name ${{ env.MEGA_APP_NAME }} --platform ${{ matrix.platform }}
        shell: bash
        working-directory: build-system-tests
