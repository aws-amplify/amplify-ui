name: Setup hotfix branch with main

on:
  push:
    branches: [ashwin-main]

permissions:
  contents: write # Used to push tags to GitHub
  # id-token: write # This is required for requesting the JWT

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      has-changesets: ${{ steps.has-changesets.outputs.has-changesets }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@b80ff79f1755d06ba70441c368a6fe801f5f3a62 # v4.1.3 https://github.com/actions/checkout/commit/cd7d8d697e10461458bc61a30d094dc601a8b017
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0
      - name: Check if repo has unconsumed changesets
        id: has-changesets
        uses: ./.github/actions/has-changesets
      # Note: if there are no changesets, that means that either
      #         (1) "Version Packages" PR was just merged, or
      #         (2) no commits with changesets have been merged after packages were last published.
      #
      #       In either way, we'll attempt to publish the packages. In case of (1), publish will succeed. In
      #       case of (2), `@changesets/action` will know that UI packages have already published and will
      #       skip publish.

  setup-hotFix-branch:
    needs: setup
    if: ${{ needs.setup.outputs.has-changesets != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@b80ff79f1755d06ba70441c368a6fe801f5f3a62 # v4.1.3 https://github.com/actions/checkout/commit/cd7d8d697e10461458bc61a30d094dc601a8b017
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Set github commit user
        env:
          GITHUB_EMAIL: "github-actions[bot]@users.noreply.github.com"
          GITHUB_USER: "github-actions[bot]"
        run: |
          git config --global user.email $GITHUB_EMAIL
          git config --global user.name $GITHUB_USER

      - name: Sync hotfix branch with main
        run: |
          # First sync hotfix with main using the "theirs" strategy to resolve conflicts
          git fetch origin ashwin-main ashwin-hotfix
          git checkout ashwin-hotfix

          # Use -X theirs to automatically resolve conflicts in favor of main
          git merge origin/ashwin-main --no-edit -X theirs --allow-unrelated-histories
          echo "MERGE COMPLETE"
          git push origin ashwin-hotfix
