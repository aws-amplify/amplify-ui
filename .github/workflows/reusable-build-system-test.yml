# Description: this is a reusable workflow that runs build on mega-apps that have all the connected components for React Native.
#
# See build-system-test.yml for usage.
on:
  workflow_call:
    inputs:
      dist-tag:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ci
    strategy:
      fail-fast: false
      matrix:
        framework: [react]
        framework-version: [latest]
        build-tool: [cra, next, vite]
        build-tool-version: [latest]
        pkg-manager: [npm]
        language: [ts]
        node-version: [18]
        pkg-manager-version: [latest]
        include:
          - framework: react
            framework-version: latest
            build-tool: cra
            build-tool-version: latest
            pkg-manager: npm
            language: ts
            node-version: 20
          - framework: react
            framework-version: 16
            build-tool: cra
            build-tool-version: latest
            pkg-manager: npm
            language: ts
            node-version: 20
          - framework: react
            framework-version: latest
            build-tool: cra
            build-tool-version: latest
            pkg-manager: npm
            language: js
            node-version: 20
          - framework: react
            framework-version: latest
            build-tool: cra
            build-tool-version: latest
            pkg-manager: yarn
            pkg-manager-version: 1
            language: ts
            node-version: 20
          - framework: react
            framework-version: 18
            build-tool: next
            build-tool-version: 12
            pkg-manager: npm
            language: ts
            node-version: 20
          - framework: react
            framework-version: latest
            build-tool: vite
            build-tool-version: 2
            pkg-manager: npm
            language: ts
            node-version: 20

          - framework: angular
            framework-version: latest
            build-tool: angular-cli
            build-tool-version: latest
            pkg-manager: npm
            language: ts
            node-version: 20
          - framework: angular
            framework-version: 14
            build-tool: angular-cli
            build-tool-version: 14
            pkg-manager: npm
            language: ts
            node-version: 20

          - framework: vue
            framework-version: 3 # here use "3" instead of "latest" because .vuerc(preset) doesn't accept "latest" as "vueVersion"
            build-tool: vue-cli
            build-tool-version: latest
            pkg-manager: yarn # vue-cli defualt pkg-manager is yarn. It can't be customized in the preset.json.
            language: ts
            node-version: 20
          - framework: vue
            framework-version: latest
            build-tool: vite
            build-tool-version: latest
            pkg-manager: npm
            language: ts
            node-version: 20
          - framework: vue
            framework-version: latest
            build-tool: vite
            build-tool-version: 3
            pkg-manager: npm
            language: ts
            node-version: 20
          - framework: vue
            framework-version: latest
            build-tool: nuxt
            build-tool-version: latest
            pkg-manager: npm
            language: ts
            node-version: 20

    env:
      MEGA_APP_NAME: ${{ matrix.framework }}-${{ matrix.framework-version }}-${{ matrix.build-tool }}-${{ matrix.build-tool-version }}-${{ matrix.language }}-ui-${{ inputs.dist-tag }}

    steps:
      - name: Checkout Amplify UI
        uses: actions/checkout@b80ff79f1755d06ba70441c368a6fe801f5f3a62 # v4.1.3 https://github.com/actions/checkout/commit/cd7d8d697e10461458bc61a30d094dc601a8b017
        with:
          persist-credentials: false
      - name: Setup Node.js ${{ matrix.node-version }} with ${{ matrix.pkg-manager }}
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2 https://github.com/actions/setup-node/commit/60edb5dd545a775178f52524783378180af0d1f8
        with:
          node-version: ${{ matrix.node-version }}
          cache: ${{ matrix.pkg-manager }}
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MINS: 2
      - name: Create MegaApp ${{ env.MEGA_APP_NAME }} and run build on NodeJS ${{ matrix.node-version }}
        run: npm run ${{ env.MEGA_APP_NAME }}
        shell: bash
        working-directory: build-system-tests
