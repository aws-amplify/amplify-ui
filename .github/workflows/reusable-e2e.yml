# Description: this is a reusable workflow that runs unit and e2e tests.
#
# See `./test-prs.yml` to see an example usage.

on:
  workflow_call:
    inputs:
      commit:
        # commit to run tests against
        required: true
        type: string
      repository:
        # repository to run tests against (possibly a fork of amplify-ui)
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID_AUTH:
        required: true
      AWS_SECRET_ACCESS_KEY_AUTH:
        required: true
      AWS_ACCESS_KEY_ID_DATASTORE:
        required: true
      AWS_SECRET_ACCESS_KEY_DATASTORE:
        required: true
      AWS_ACCESS_KEY_ID_STORAGE:
        required: true
      AWS_SECRET_ACCESS_KEY_STORAGE:
        required: true
      AWS_ACCESS_KEY_ID_GEO:
        required: true
      AWS_SECRET_ACCESS_KEY_GEO:
        required: true
      DOMAIN:
        required: true
      PHONE_NUMBER:
        required: true
      USERNAME:
        required: true
      NEW_PASSWORD:
        required: true
      VALID_PASSWORD:
        required: true
      SITE_URL:
        required: true
      DOCSEARCH_DOCS_APP_ID:
        required: true
      DOCSEARCH_DOCS_API_KEY:
        required: true
      DOCSEARCH_DOCS_INDEX_NAME:
        required: true

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Amplify UI
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.commit }}
          repository: ${{ inputs.repository }}
          persist-credentials: false
      - name: Setup Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MINS: 2
      - name: Restore cypress runner from Cache
        uses: actions/cache@v3
        id: restore-cypress-cache
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('yarn.lock') }}
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MINS: 1
      - name: Install packages
        uses: ./.github/actions/install-with-retries
        with:
          # only install binary if cypress cache missed
          skip-cypress-binary: ${{ steps.restore-cypress-cache.outputs.cache-hit }}
      - name: Build ui package
        run: yarn ui build
      - name: Cache cypress runner
        # create new cypress cache entry only if cypress cache missed and we installed a new one.
        if: steps.restore-cypress-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('yarn.lock') }}
      - name: Cache packages/ui/dist
        uses: actions/cache@v3
        with:
          path: ./packages/ui/dist
          key: ${{ runner.os }}-ui-${{ inputs.commit }}
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules
            **/node_modules
          key: ${{ runner.os }}-nodemodules-${{ inputs.commit }}
  unit:
    needs: setup
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test

    strategy:
      matrix:
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        package:
          - ui
          - angular
          - vue
          - react
          - react-native
          - react-core

    steps:
      - name: Checkout Amplify UI
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.commit }}
          repository: ${{ inputs.repository }}
          persist-credentials: false

      - name: Setup Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MINS: 2
      - name: Restore node_modules cache
        uses: actions/cache@v3
        id: restore-cache
        with:
          path: |
            ./node_modules
            **/node_modules
          key: ${{ runner.os }}-nodemodules-${{ inputs.commit }}
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MINS: 3

      - name: Restore ui/dist cache
        uses: actions/cache@v3
        id: restore-ui-cache
        with:
          path: ./packages/ui/dist
          key: ${{ runner.os }}-ui-${{ inputs.commit }}
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MINS: 1

      - name: Install packages
        if: steps.restore-cache.outputs.cache-hit != 'true'
        uses: ./.github/actions/install-with-retries

      - name: Build ui package
        if: ${{ steps.restore-ui-cache.outputs.cache-hit != 'true' && matrix.package != 'ui' }}
        run: yarn ui build

      - name: Build react-core package
        if: ${{ matrix.package == 'react' || matrix.package == 'react-native' }}
        run: yarn react-core build

      - name: Build ${{ matrix.package }} package
        if: ${{ matrix.package != 'ui' }}
        run: yarn ${{ matrix.package }} build

      - name: Check ${{ matrix.package }} bundle size
        if: ${{ matrix.package == 'react' }}
        run: yarn react size

      - name: Cache ${{ matrix.package }}/dist
        uses: actions/cache@v3
        with:
          path: ./packages/${{ matrix.package }}/dist
          key: ${{ runner.os }}-${{ matrix.package }}-${{ inputs.commit }}

      - name: Lint packages
        run: yarn ${{ matrix.package }} lint

      - name: Run ${{ matrix.package }} tests
        run: yarn ${{ matrix.package }} test

  docs:
    needs: [setup, unit]
    runs-on: ubuntu-latest
    environment: ci
    env:
      NODE_ENV: test
    steps:
      - name: Checkout Amplify UI
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.commit }}
          repository: ${{ inputs.repository }}
          persist-credentials: false

      - name: Setup Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MINS: 2

      - name: Restore cypress runner Cache
        uses: actions/cache@v3
        id: restore-cypress-cache
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('yarn.lock') }}
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MINS: 1

      - name: Restore node_modules cache
        uses: actions/cache@v3
        id: restore-cache
        with:
          path: |
            ./node_modules
            **/node_modules
          key: ${{ runner.os }}-nodemodules-${{ inputs.commit }}
        env:
          SEGMENT_DOWNLOAD_TIMEOUT_MINS: 3

      - name: Install packages
        if: steps.restore-cache.outputs.cache-hit != 'true' || steps.restore-cypress-cache.outputs.cache-hit != 'true'
        uses: ./.github/actions/install-with-retries

      - name: Build ui package
        run: yarn ui build

      - name: Build react-core package
        run: yarn react-core build

      - name: Build react package
        run: yarn react build

      - name: Build docs package
        run: yarn docs build
        env:
          SITE_URL: ${{ secrets.SITE_URL }}
          DOCSEARCH_DOCS_APP_ID: ${{ secrets.DOCSEARCH_DOCS_APP_ID }}
          DOCSEARCH_DOCS_API_KEY: ${{ secrets.DOCSEARCH_DOCS_API_KEY }}
          DOCSEARCH_DOCS_INDEX_NAME: ${{ secrets.DOCSEARCH_DOCS_INDEX_NAME }}

      - name: Start docs site
        run: yarn docs start & npx wait-on -c waitOnConfig.json -t 20000 http-get://localhost:3000

      - name: Run E2E tests against docs
        run: yarn workspace e2e test:theme
        id: e2e
        env:
          # Env values for testing flows
          DOMAIN: ${{ secrets.DOMAIN }}
          PHONE_NUMBER: ${{ secrets.PHONE_NUMBER }}
          USERNAME: ${{ secrets.USERNAME }}
          NEW_PASSWORD: ${{ secrets.NEW_PASSWORD }}
          VALID_PASSWORD: ${{ secrets.VALID_PASSWORD }}

      - name: Upload failure screenshots and errors
        uses: actions/upload-artifact@v3
        if: ${{ failure() && steps.e2e.outcome != 'success' }}
        with:
          name: docs-e2e-cypress-error
          path: |
            packages/e2e/cypress/videos/**
            packages/e2e/cypress/screenshots/**
          retention-days: 5
